<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/2/2017 12:53:58 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NFPLAP246"
  DTS:CreatorName="NFPDEN\BVonminden"
  DTS:DTSID="{1DBBF4F7-4D35-493D-A3CF-3C7184D851EE}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.1000.169"
  DTS:LocaleID="1033"
  DTS:MaxConcurrentExecutables="1"
  DTS:ObjectName="PFSDataExtractsHIPAA_v2"
  DTS:PackageType="5"
  DTS:VersionBuild="74"
  DTS:VersionGUID="{4ADE3365-9F71-4099-9DA5-813782BA7EFC}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DWH]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{0274FEC8-9226-44E1-B83E-387FEE9E5409}"
      DTS:ObjectName="DWH">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=nfplap246;Initial Catalog=dwh_test;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{4E7A2CBB-3FCE-4A4A-8FEC-C6C4961A7F18}"
      DTS:ObjectName="pClientName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{E2CE12BD-9141-4A7A-86BF-CC2B9C302E3C}"
      DTS:ObjectName="pFileName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{88EED214-261A-435F-843C-A7449D6B3E95}"
      DTS:ObjectName="pFormatCode">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{737E3014-621C-4CFD-87BD-110136792545}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="pkgCurrentExportProfileID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A1E900EB-9AEA-4815-801C-C1F8624AD71B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="pkgCurrentExportProfileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6816DE50-2653-4940-BE96-A684A2F78DB7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="pkgCurrentExportProfileTypeID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BB425C3F-D33D-4921-84C6-104AF0F10D4F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="pkgDWHConnection">
      <DTS:VariableValue
        DTS:DataType="8">Server=nfplap246;Database=dwh_test;Integrated Security=true</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{88058CF7-0EF6-45BF-89DF-D209400DF6C5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="pkgExportProfiles">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{914DAAFD-F37C-4D0F-AC64-05470C9E5001}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="pkgExtractRootPath">
      <DTS:VariableValue
        DTS:DataType="8">c:\temp\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Export Profile ID Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{020255EB-F639-4CB8-920F-66ECBFE136B2}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Export Profile ID Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{BE1000F6-D3D6-48C3-94E6-CCBA6C712DA6}"
        DTS:ObjectName="{BE1000F6-D3D6-48C3-94E6-CCBA6C712DA6}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::pkgExportProfiles" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Export Profile ID Loop Container\Extract Surveys - Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{4DBB267E-3013-460B-B765-DA6965EC134E}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Extract Surveys - Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_e0a2ed466f1343b391285456eb43d496"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::pkgCurrentExportProfileID,User::pkgCurrentExportProfileName,User::pkgCurrentExportProfileTypeID,User::pkgDWHConnection,User::pkgExtractRootPath">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_e0a2ed466f1343b391285456eb43d496.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{2D137505-34C2-42F7-88D5-0FC7D5E13349}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_e0a2ed466f1343b391285456eb43d496</RootNamespace>
    <AssemblyName>ST_e0a2ed466f1343b391285456eb43d496</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="DynamicExportComponent.cs" />
    <Compile Include="eExportProfileIDCustomizations.cs" />
    <Compile Include="eExportProfileTypeID.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="DynamicExportComponent.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using System.Data.SqlClient;


namespace ST_e0a2ed466f1343b391285456eb43d496
{
    public class DynamicExportComponent
    {
        List<string[]> _sproc_extract_targets;


        public Action<string> StatusReport { get; private set; }

        public DynamicExportComponent(Action<string> statusReporting) {

            StatusReport = statusReporting;

            _sproc_extract_targets = new List<string[]>();

            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Alternative_Encounter", "AlternativeEncounter" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Home_Visit_Encounter", "HomeVisitEncounter" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_PHQ_9", "PHQ"});
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_ASQ_3" ,"ASQ"});
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Demographics", "Demographics" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Infant_Birth", "InfantBirth" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Referrals_To_NFP_Program", "ReferralsToNFP" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Edinburgh_Postnatal_Depression_Scale", "Edinburgh" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Infant_Health_Care", "InfantHealthcare" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Maternal_Health_Assessment", "MaternalHealthAssesment" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Relationship_Assessment", "RelationshipAssesment" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_GAD_7", "GAD7" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_STAR_Framework", "STAR" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Client_Funding_Source", "ClientFunding" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Use_Of_Government_and_Community_Services", "Govt_Comm_Srvcs" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_DANCE_Coding_Sheet", "Dance" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Health_Habits", "HealthHabits" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_NFP_Tribal_Project", "Tribal" });

            //  --missing client discharge
            //  --refferalstoservices missing
            //  --clients missing
            //  --enrollments and dissmissals missing
            //  --caseload missing

        }

        public void process_export_profile(string rootPath, int ExportProfileID, int ExportProfileType, string ExportProfileName,
            string source_connection_string) {

            // Tab Delimited (0) ePHI (BAA)
            // Tab Delimited (1) Limited ePHI (DUA) 
            // Pipe Delimited (4) ePHI (BAA)
            // Pipe Delimited (5) Limited ePHI (DUA)

            string fileExtension = (ExportProfileType == 0 | ExportProfileType == 1) 
                ? ".tab" 
                : 
                (ExportProfileType == 4 | ExportProfileType == 5) 
                ? ".bcp" 
                :  "";

            string delim = (ExportProfileType == 0 | ExportProfileType == 1)
                ? "\t"
                :
                (ExportProfileType == 4 | ExportProfileType == 5)
                ? "|"
                : "";

            try
            {
                    foreach (string[] sproc_target in _sproc_extract_targets)
                    {

                        string fileName = $"{rootPath}{ExportProfileName}\\{sproc_target[1]}{fileExtension}";

                        StatusReport($"{nameof(DynamicExportComponent)}:Got Call From {nameof(ExportProfileID)}:{ExportProfileID},"
                            + $"{nameof(ExportProfileName)}:{ExportProfileName}, target:{source_connection_string}, dumping to file:{fileName}");

                        SqlConnection connection = new SqlConnection(source_connection_string);
                        connection.Open();
                        SqlCommand sqlCmd   = connection.CreateCommand();
                        sqlCmd.CommandText  = $"{sproc_target[0]}";
                        sqlCmd.CommandType  = System.Data.CommandType.StoredProcedure;
                        sqlCmd.Parameters.Add(new SqlParameter("@p_Encrypt", false));
                        sqlCmd.Parameters.Add(new SqlParameter("@p_Profile_Id", ExportProfileID));
                        sqlCmd.Parameters.Add(new SqlParameter("@p_exclude_tribal", false));
                        SqlDataReader resultReader = sqlCmd.ExecuteReader();

                        if (!resultReader.HasRows)
                            continue;

                        StatusReport($"{resultReader.RecordsAffected} records returned for processing");

                        if(!Directory.Exists(rootPath + ExportProfileName))
                            Directory.CreateDirectory(rootPath + ExportProfileName);

                        using (TextWriter tr = File.CreateText(fileName))
                        {
                            int maxf = resultReader.FieldCount;
                            int maxr = resultReader.RecordsAffected;

                        for (int i = 0; i < maxf; i++) // dump headers
                        {
                            if (i != maxf - 1)
                                tr.Write(resultReader.GetName(i)+delim);
                            else
                                tr.Write((resultReader.GetName(i)) + "\n");
                        }

                        while (resultReader.Read()) // dump records
                        {
                            for (int i = 0; i < maxf; i++) // dump headers
                            {
                                if (i != maxf - 1)
                                    tr.Write(resultReader.GetValue(i) + delim);
                                else
                                    tr.Write((resultReader.GetValue(i)) + "\n");
                            }
                        }
                    }
               }
            }
            catch (Exception)
            {
                throw;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_e0a2ed466f1343b391285456eb43d496
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string      rootFolderPath                  = (string)Dts.Variables["pkgExtractRootPath"].Value;
            string      dWHTargetConnection             = (string)Dts.Variables["pkgDWHConnection"].Value;
            string      currentExportProfileName        = (string)Dts.Variables["pkgCurrentExportProfileName"].Value;
            int         currentExportProfileID          = (int)Dts.Variables["pkgCurrentExportProfileID"].Value;
            int         currentExportProfileTypeID      = (int)Dts.Variables["pkgCurrentExportProfileTypeID"].Value;
                        
            try
            {
                bool fireAgain = true;
                DynamicExportComponent dec = new DynamicExportComponent((p) => Dts.Events.FireProgress(p, 0, 0, 0, $"{nameof(ScriptMain)}", ref fireAgain));
                dec.process_export_profile(rootFolderPath, currentExportProfileID, currentExportProfileTypeID, currentExportProfileName, dWHTargetConnection);

            }
            catch (Exception ex)
            {

                Dts.Events.FireError(0, $"{nameof(ScriptMain)}", ex.Message, null, 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
                return;
            }


			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="eExportProfileTypeID.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ST_e0a2ed466f1343b391285456eb43d496
{
    public enum eExportProfileTypeID
    {
        Tab_Delimited_ePHI_BAA                  =   0,
        Tab_Delimited_Limited_ePHI_DUA          =   1,
        MIECHV_ePHI_BAA                         =   2,
        MIECHV_Limited_ePHI_DUA                 =   3,
        Pipe_Delimited_ePHI_BAA                 =   4,
        Pipe_Delimited_Limited_ePHI_DUA         =   5,
        Tab_Delimited_No_ePHI_Service_Agrmnt    =   6,
        MIECHV_No_ePHI_Service_Agrmnt           =   7,
        Pipe_Delimited_No_ePHI_Service_Agmnt    =   8
    }
}]]></ProjectItem>
              <ProjectItem
                Name="eExportProfileIDCustomizations.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ST_e0a2ed466f1343b391285456eb43d496
{
    public enum eExportProfileIDCustomizations
    {
        def
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_e0a2ed466f1343b391285456eb43d496</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_e0a2ed466f1343b391285456eb43d496</msb:DisplayName>
		<msb:ProjectId>{1C79FF8A-B577-4527-B05E-CEE28C17A790}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_e0a2ed466f1343b391285456eb43d496.csproj"/>
		<msb:File Include="DynamicExportComponent.cs"/>
		<msb:File Include="eExportProfileIDCustomizations.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="eExportProfileTypeID.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e0a2ed466f1343b391285456eb43d496.Properties.Settings.get_Default():ST_e0a2ed466f1343b391285456eb43d496.Properties.Sett" +
    "ings")]

namespace ST_e0a2ed466f1343b391285456eb43d496.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e0a2ed466f1343b391285456eb43d496")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_e0a2ed466f1343b391285456eb43d496")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e0a2ed466f1343b391285456eb43d496.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e0a2ed466f1343b391285456eb43d496.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e0a2ed466f1343b391285456eb43d496.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e0a2ed466f1343b391285456eb43d496.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e0a2ed466f1343b391285456eb43d496.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_e0a2ed466f1343b391285456eb43d496.dll">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
RwYGALUDRwYGANAD7wQGAOEI4wUGACoAZQEGADkDcgcGACEA4wU7AEcHAAAKANEGAwkGAC8HHwEG
AIsG4wUGAOoF4wUOAHkEYQUOAOICYQUGAFQDXwcGAPEGkgcGAKgGMgYSAB4DnAUSAIUDnAUSAP4C
HQYGAAkF4wUGADEA4wUKAH0GAwkKAHAGlQYKANMBAwkKALsBlQYKAJQCUAEKAFkGAwkGAPsF4wUK
ABUHAwkKAMQGlQYGAAwKHwEGALQGHwEGADoCHwEGACIHHwEGAAoC4wUOAIoFYQUWACgIcAIWAAEC
cAIOAAEHYQUGAK0C4wUGABYC4wUGAP0JRwYAAAAAWwAAAAAAAQABAAEAEAAZCTcANQABAAEAAQEA
AEUINwBVAAMABQABAQAACgE3AFUABQAFAAEAEAAIBjcAXQAPAAUAAAAQAJkH9Qc1AA8ABwAAARAA
Mgj1B3UAEQALAAMBAACnCAAAVQASAA4AAwEQAAEAAAA1ABUADgABAJAIYAEBAJ0BaAEGBkgBbwFW
gOsEcgEGBkgBbwFWgHQAdgFWgLsAdgFWgGQAdgFWgKMAdgFWgIsAdgFWgNoAdgFWgH8JdgFWgGEJ
dgFWgDwJdgERAO8FegERANICfgERAN4BggEGBkgBbwFWgHMIhgFWgLIChgEGABMGigEGADsIjQFQ
IAAAAACGCLMJkQEBAFggAAAAAIEIxAmZAQEAZCAAAAAAhhhSB5kBAgDcIgAAAACGAD8CogEDANQl
AAAAAIYADgYGAAgACCcAAAAAhhhSBwYACAAQJwAAAACDGFIHBgAIABgnAAAAAJMI7QarAQgARCcA
AAAAkwi6ArABCABLJwAAAACTCMYCtQEIAFMnAAAAAJYI6Ai7AQkAWicAAAAAhhhSBwYACQBiJwAA
AACRGFgHwAEJABAnAAAAAIYYUgcGAAkAbicAAAAAgwAWABAACQAAAAEA5QQAAAEAKQUAAAEAOQUA
AAIA+gAAAAMAoAIAAAQAVgIAAAUAEAUAAAEA5QQAAAEAwgYJAFIHAQARAFIHBgAZAFIHCgApAFIH
EAAxAFIHEAA5AFIHEABBAFIHEABJAFIHEABRAFIHEABZAFIHEABhAFIHEAB5AFIHBgCxAFIHBgDB
AFIHBgDhAFIHFQBpAFIHBgAMAFIHBgAMAIUBIgAMAEQHPQAUADAJTQDxANoIUgDxANoIWQDxANMI
YQAcAPoBIgABAVIHEAAJAQMGBgABAcUBbQDxANoIcwAZAd4JEAAZAZACeQARAWQIgAA5AVIHhgAp
AYUBjAARAd8GlQBBAccImgBBAYkBngBJAcAIogBJAQYKpwBZAe4JrgBBAaQJngBBAWgCtQCZADMD
EABBAdwEugDxANMIvwBBAYABmgBpARYDBgAUANUJmgC5AIgIzwBxASQI1QB5AdoF2wCBAdIE4gAc
AFIH5gBxAbUI7AChAO4B8gCJAToH9gBxAfQIAQC5AFIHBgCRASgC/wCRAfkJCAHJAFIHDgHpAFIH
BgCJAXsIFgEIABAAMwEIABgAMwEIABwAOAEIACAAPQEIACQAQgEIACgARwEIACwATAEIADAAUQEI
ADQAVgEIADgAWwEIAEwAMwEIAFAAOAEgAGMAOAEuAAsA2wEuABMA5AEuABsAAwIuACMADAIuACsA
NQIuADMANQIuADsANQIuAEMADAIuAEsAOwIuAFMANQIuAFsAUgJAAGMAOAFBAGMAOAFJAHsAAwJp
AHsAAwKjAGsAOAHDAHMAOAEjAWMAOAEhAmMAOAEoAMUAAgABAAYAAgAHAAQAAADICcQBAADxBswB
AADaAtEBAADsCNYBAgABAAMAAQACAAMAAgAIAAUAAgAJAAcAAQAKAAcAAgALAAkAGwBGAGcABIAA
AAEAAACNGX1VAAAAAAAANwAAAAQAAAAAAAAAAAAAACEBXAEAAAAABAAAAAAAAAAAAAAAIQFQAQAA
AAAOAAAAAAAAAAAAAAAqAUIFAAAAAAQAAAAAAAAAAAAAACEB4wUAAAAADgAAAAAAAAAAAAAAKgEp
AQAAAAAAAAAAAQAAAKMHAAAIAAUACQAFAAAAAAAAPD5jX19EaXNwbGF5Q2xhc3MwXzAAPE1haW4+
Yl9fMABBY3Rpb25gMQBMaXN0YDEASW50MzIAU1RfZTBhMmVkNDY2ZjEzNDNiMzkxMjg1NDU2ZWI0
M2Q0OTYAPE1vZHVsZT4ATUlFQ0hWX2VQSElfQkFBAFRhYl9EZWxpbWl0ZWRfZVBISV9CQUEAUGlw
ZV9EZWxpbWl0ZWRfZVBISV9CQUEATUlFQ0hWX0xpbWl0ZWRfZVBISV9EVUEAVGFiX0RlbGltaXRl
ZF9MaW1pdGVkX2VQSElfRFVBAFBpcGVfRGVsaW1pdGVkX0xpbWl0ZWRfZVBISV9EVUEARXhwb3J0
UHJvZmlsZUlEAGVFeHBvcnRQcm9maWxlVHlwZUlEAFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTeXN0ZW0uRGF0YQBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVj
dGlvbnMuR2VuZXJpYwBSZWFkAEFkZABnZXRfUmVjb3Jkc0FmZmVjdGVkADxTdGF0dXNSZXBvcnQ+
a19fQmFja2luZ0ZpZWxkAERiQ29tbWFuZABDcmVhdGVDb21tYW5kAFNxbENvbW1hbmQAZGVmYXVs
dEluc3RhbmNlAGdldF9NZXNzYWdlAEludm9rZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1l
VHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAHByb2Nlc3NfZXhwb3J0X3Byb2ZpbGUA
RXhwb3J0UHJvZmlsZU5hbWUAR2V0TmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1l
AHNldF9Db21tYW5kVHlwZQBFeHBvcnRQcm9maWxlVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBw
bGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBXcml0ZQBD
b21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERl
YnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVB
dHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmli
dXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0
cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0
cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2lu
dEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlB
dHRyaWJ1dGUAZ2V0X1ZhbHVlAEdldFZhbHVlAHZhbHVlAGRlZgBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAFN0cmluZwBzb3VyY2VfY29ubmVjdGlvbl9zdHJpbmcAc3RhdHVzUmVwb3J0aW5nAHJv
b3RQYXRoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRN
b2RlbABTVF9lMGEyZWQ0NjZmMTM0M2IzOTEyODU0NTZlYjQzZDQ5Ni5kbGwAZ2V0X0l0ZW0AU3lz
dGVtAEVudW0AcmVzb3VyY2VNYW4AQm9vbGVhbgBPcGVuAFNjcmlwdE1haW4AZmlyZUFnYWluAFN5
c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9u
AFNxbFBhcmFtZXRlckNvbGxlY3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ARXhjZXB0
aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBEaXJlY3RvcnlJbmZvAHAARGJEYXRh
UmVhZGVyAFNxbERhdGFSZWFkZXIARXhlY3V0ZVJlYWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAEV2
ZW50c09iamVjdFdyYXBwZXIAU3FsUGFyYW1ldGVyAFN0cmVhbVdyaXRlcgBUZXh0V3JpdGVyAEZp
cmVFcnJvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lz
dGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2UwYTJlZDQ2
NmYxMzQzYjM5MTI4NTQ1NmViNDNkNDk2LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBE
ZWJ1Z2dpbmdNb2RlcwBTVF9lMGEyZWQ0NjZmMTM0M2IzOTEyODU0NTZlYjQzZDQ5Ni5Qcm9wZXJ0
aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAPD40X190aGlzAGVFeHBvcnRQcm9maWxlSURDdXN0
b21pemF0aW9ucwBnZXRfUGFyYW1ldGVycwBTdWNjZXNzAEZpcmVQcm9ncmVzcwBnZXRfRHRzAF9z
cHJvY19leHRyYWN0X3RhcmdldHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAEV4aXN0cwBnZXRf
SGFzUm93cwBDb25jYXQARm9ybWF0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABT
eXN0ZW0uRGF0YS5TcWxDbGllbnQARHluYW1pY0V4cG9ydENvbXBvbmVudABnZXRfQ3VycmVudABQ
aXBlX0RlbGltaXRlZF9Ob19lUEhJX1NlcnZpY2VfQWdtbnQATUlFQ0hWX05vX2VQSElfU2Vydmlj
ZV9BZ3JtbnQAVGFiX0RlbGltaXRlZF9Ob19lUEhJX1NlcnZpY2VfQWdybW50AGdldF9GaWVsZENv
dW50AGdldF9TdGF0dXNSZXBvcnQAc2V0X1N0YXR1c1JlcG9ydABNb3ZlTmV4dABzZXRfQ29tbWFu
ZFRleHQAQ3JlYXRlVGV4dABnZXRfQXNzZW1ibHkAQ3JlYXRlRGlyZWN0b3J5AAAAAFtzAHUAcgB2
AGUAeQBfAHYAaQBlAHcAcwAuAHUAcwBwAF8AcwBlAGwAZQBjAHQAXwBBAGwAdABlAHIAbgBhAHQA
aQB2AGUAXwBFAG4AYwBvAHUAbgB0AGUAcgAAKUEAbAB0AGUAcgBuAGEAdABpAHYAZQBFAG4AYwBv
AHUAbgB0AGUAcgAAWXMAdQByAHYAZQB5AF8AdgBpAGUAdwBzAC4AdQBzAHAAXwBzAGUAbABlAGMA
dABfAEgAbwBtAGUAXwBWAGkAcwBpAHQAXwBFAG4AYwBvAHUAbgB0AGUAcgAAJUgAbwBtAGUAVgBp
AHMAaQB0AEUAbgBjAG8AdQBuAHQAZQByAAA7cwB1AHIAdgBlAHkAXwB2AGkAZQB3AHMALgB1AHMA
cABfAHMAZQBsAGUAYwB0AF8AUABIAFEAXwA5AAAHUABIAFEAADtzAHUAcgB2AGUAeQBfAHYAaQBl
AHcAcwAuAHUAcwBwAF8AcwBlAGwAZQBjAHQAXwBBAFMAUQBfADMAAAdBAFMAUQAASXMAdQByAHYA
ZQB5AF8AdgBpAGUAdwBzAC4AdQBzAHAAXwBzAGUAbABlAGMAdABfAEQAZQBtAG8AZwByAGEAcABo
AGkAYwBzAAAZRABlAG0AbwBnAHIAYQBwAGgAaQBjAHMAAElzAHUAcgB2AGUAeQBfAHYAaQBlAHcA
cwAuAHUAcwBwAF8AcwBlAGwAZQBjAHQAXwBJAG4AZgBhAG4AdABfAEIAaQByAHQAaAAAF0kAbgBm
AGEAbgB0AEIAaQByAHQAaAAAYXMAdQByAHYAZQB5AF8AdgBpAGUAdwBzAC4AdQBzAHAAXwBzAGUA
bABlAGMAdABfAFIAZQBmAGUAcgByAGEAbABzAF8AVABvAF8ATgBGAFAAXwBQAHIAbwBnAHIAYQBt
AAAdUgBlAGYAZQByAHIAYQBsAHMAVABvAE4ARgBQAAB5cwB1AHIAdgBlAHkAXwB2AGkAZQB3AHMA
LgB1AHMAcABfAHMAZQBsAGUAYwB0AF8ARQBkAGkAbgBiAHUAcgBnAGgAXwBQAG8AcwB0AG4AYQB0
AGEAbABfAEQAZQBwAHIAZQBzAHMAaQBvAG4AXwBTAGMAYQBsAGUAABNFAGQAaQBuAGIAdQByAGcA
aAAAVXMAdQByAHYAZQB5AF8AdgBpAGUAdwBzAC4AdQBzAHAAXwBzAGUAbABlAGMAdABfAEkAbgBm
AGEAbgB0AF8ASABlAGEAbAB0AGgAXwBDAGEAcgBlAAAhSQBuAGYAYQBuAHQASABlAGEAbAB0AGgA
YwBhAHIAZQAAZXMAdQByAHYAZQB5AF8AdgBpAGUAdwBzAC4AdQBzAHAAXwBzAGUAbABlAGMAdABf
AE0AYQB0AGUAcgBuAGEAbABfAEgAZQBhAGwAdABoAF8AQQBzAHMAZQBzAHMAbQBlAG4AdAAAL00A
YQB0AGUAcgBuAGEAbABIAGUAYQBsAHQAaABBAHMAcwBlAHMAbQBlAG4AdAAAX3MAdQByAHYAZQB5
AF8AdgBpAGUAdwBzAC4AdQBzAHAAXwBzAGUAbABlAGMAdABfAFIAZQBsAGEAdABpAG8AbgBzAGgA
aQBwAF8AQQBzAHMAZQBzAHMAbQBlAG4AdAAAK1IAZQBsAGEAdABpAG8AbgBzAGgAaQBwAEEAcwBz
AGUAcwBtAGUAbgB0AAA7cwB1AHIAdgBlAHkAXwB2AGkAZQB3AHMALgB1AHMAcABfAHMAZQBsAGUA
YwB0AF8ARwBBAEQAXwA3AAAJRwBBAEQANwAATXMAdQByAHYAZQB5AF8AdgBpAGUAdwBzAC4AdQBz
AHAAXwBzAGUAbABlAGMAdABfAFMAVABBAFIAXwBGAHIAYQBtAGUAdwBvAHIAawAACVMAVABBAFIA
AFtzAHUAcgB2AGUAeQBfAHYAaQBlAHcAcwAuAHUAcwBwAF8AcwBlAGwAZQBjAHQAXwBDAGwAaQBl
AG4AdABfAEYAdQBuAGQAaQBuAGcAXwBTAG8AdQByAGMAZQAAG0MAbABpAGUAbgB0AEYAdQBuAGQA
aQBuAGcAAICBcwB1AHIAdgBlAHkAXwB2AGkAZQB3AHMALgB1AHMAcABfAHMAZQBsAGUAYwB0AF8A
VQBzAGUAXwBPAGYAXwBHAG8AdgBlAHIAbgBtAGUAbgB0AF8AYQBuAGQAXwBDAG8AbQBtAHUAbgBp
AHQAeQBfAFMAZQByAHYAaQBjAGUAcwAAH0cAbwB2AHQAXwBDAG8AbQBtAF8AUwByAHYAYwBzAABV
cwB1AHIAdgBlAHkAXwB2AGkAZQB3AHMALgB1AHMAcABfAHMAZQBsAGUAYwB0AF8ARABBAE4AQwBF
AF8AQwBvAGQAaQBuAGcAXwBTAGgAZQBlAHQAAAtEAGEAbgBjAGUAAEtzAHUAcgB2AGUAeQBfAHYA
aQBlAHcAcwAuAHUAcwBwAF8AcwBlAGwAZQBjAHQAXwBIAGUAYQBsAHQAaABfAEgAYQBiAGkAdABz
AAAZSABlAGEAbAB0AGgASABhAGIAaQB0AHMAAFVzAHUAcgB2AGUAeQBfAHYAaQBlAHcAcwAuAHUA
cwBwAF8AcwBlAGwAZQBjAHQAXwBOAEYAUABfAFQAcgBpAGIAYQBsAF8AUAByAG8AagBlAGMAdAAA
DVQAcgBpAGIAYQBsAAABAAkuAGIAYwBwAAAJLgB0AGEAYgAAA3wAAAMJAAAbewAwAH0AewAxAH0A
XAB7ADIAfQB7ADMAfQAANXsAMAB9ADoARwBvAHQAIABDAGEAbABsACAARgByAG8AbQAgAHsAMQB9
ADoAewAyAH0ALAAALUQAeQBuAGEAbQBpAGMARQB4AHAAbwByAHQAQwBvAG0AcABvAG4AZQBuAHQA
AB9FAHgAcABvAHIAdABQAHIAbwBmAGkAbABlAEkARAAAUXsAMAB9ADoAewAxAH0ALAAgAHQAYQBy
AGcAZQB0ADoAewAyAH0ALAAgAGQAdQBtAHAAaQBuAGcAIAB0AG8AIABmAGkAbABlADoAewAzAH0A
ACNFAHgAcABvAHIAdABQAHIAbwBmAGkAbABlAE4AYQBtAGUAAAd7ADAAfQAAFUAAcABfAEUAbgBj
AHIAeQBwAHQAABtAAHAAXwBQAHIAbwBmAGkAbABlAF8ASQBkAAAjQABwAF8AZQB4AGMAbAB1AGQA
ZQBfAHQAcgBpAGIAYQBsAABHewAwAH0AIAByAGUAYwBvAHIAZABzACAAcgBlAHQAdQByAG4AZQBk
ACAAZgBvAHIAIABwAHIAbwBjAGUAcwBzAGkAbgBnAAADCgAAJXAAawBnAEUAeAB0AHIAYQBjAHQA
UgBvAG8AdABQAGEAdABoAAAhcABrAGcARABXAEgAQwBvAG4AbgBlAGMAdABpAG8AbgAAN3AAawBn
AEMAdQByAHIAZQBuAHQARQB4AHAAbwByAHQAUAByAG8AZgBpAGwAZQBOAGEAbQBlAAAzcABrAGcA
QwB1AHIAcgBlAG4AdABFAHgAcABvAHIAdABQAHIAbwBmAGkAbABlAEkARAAAO3AAawBnAEMAdQBy
AHIAZQBuAHQARQB4AHAAbwByAHQAUAByAG8AZgBpAGwAZQBUAHkAcABlAEkARAAAFVMAYwByAGkA
cAB0AE0AYQBpAG4AAHFTAFQAXwBlADAAYQAyAGUAZAA0ADYANgBmADEAMwA0ADMAYgAzADkAMQAy
ADgANQA0ADUANgBlAGIANAAzAGQANAA5ADYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMA
bwB1AHIAYwBlAHMAANbrW+OCIDxKm5Yre5HRddEABCABAQgDIAABBSABARERBCABAQ4FIAEBEW0G
FRI5AR0OBSABARMAFAcKDg4VEUUBHQ4dDg4SSRJNCAgICCAAFRFFARMABhURRQEdDgQgABMABgAC
Dg4dHAcABA4OHBwcBQACDg4OBRUSQQEOBSAAEoCJBQACDg4cBiABARGAkQUgABKAlQUgAgEOHAgg
ARKAnRKAnQQgABJJAyAAAgMgAAgEAAECDgYAARKAqQ4GAAESgLEOBCABDggEIAEcCAUAAg4cHAkH
Bg4ODggIElEFIAASgLkFIAASgL0GIAESgMEcAyAAHAUgAgEcGAUgABKAxQMgAA4IIAUCCA4ODggI
AAESgMkRgM0FIAASgNEHIAIBDhKA0QogBgEOCAgIDhACCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAE
AQAAAAQCAAAABAMAAAAEBAAAAAQFAAAABAYAAAAEBwAAAAQIAAAABwYVEjkBHQ4GBhUSQQEOAgYI
AwYRDAMGERADBhJlAwYSaQMGEhwDBhEgAgYCAwYSFAcgABUSQQEOCCABARUSQQEOCCAFAQ4ICA4O
BAAAEmUEAAASaQUAAQESaQQAABIcAwAAAQcoABUSQQEOBAgAEmUECAASaQQIABIcCAEACAAAAAAA
HgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9lMGEyZWQ0NjZm
MTM0M2IzOTEyODU0NTZlYjQzZDQ5NgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE3AABJAQAa
Lk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQg
RnJhbWV3b3JrIDQuNbQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAACsRwAAAAAAAAAAAADGRwAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAuEcAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAABoE
AAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQB9VY0ZAAABAH1VjRk/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAR6
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABiADAA
AAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBl
AAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGUA
MABhADIAZQBkADQANgA2AGYAMQAzADQAMwBiADMAOQAxADIAOAA1ADQANQA2AGUAYgA0ADMAZAA0
ADkANgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADUANAAxAC4A
MgAxADgAOAA1AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGUAMABh
ADIAZQBkADQANgA2AGYAMQAzADQAMwBiADMAOQAxADIAOAA1ADQANQA2AGUAYgA0ADMAZAA0ADkA
NgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQBy
AGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEA
cgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBU
AF8AZQAwAGEAMgBlAGQANAA2ADYAZgAxADMANAAzAGIAMwA5ADEAMgA4ADUANAA1ADYAZQBiADQA
MwBkADQAOQA2AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABf
AGUAMABhADIAZQBkADQANgA2AGYAMQAzADQAMwBiADMAOQAxADIAOAA1ADQANQA2AGUAYgA0ADMA
ZAA0ADkANgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA1
ADQAMQAuADIAMQA4ADgANQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANgA1ADQAMQAuADIAMQA4ADgANQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADYNwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Export Profile ID Loop Container\Get Export Profile TYPE - Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{629BA209-3CB4-4C4B-B6CC-F20D2DDD49BF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Export Profile TYPE - Execute SQL Task"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{0274FEC8-9226-44E1-B83E-387FEE9E5409}"
              SQLTask:SqlStatementSource="exec survey_views.usp_etl_exportprofiles_get_export_type_for_export_profile_id  ?"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::pkgCurrentExportProfileTypeID" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@p_export_profile_id"
                SQLTask:DtsVariableName="User::pkgCurrentExportProfileID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Export Profile ID Loop Container\Log Message - Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{FD2B68D0-6773-4627-A90F-E911727DF770}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Message - Execute SQL Task"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{0274FEC8-9226-44E1-B83E-387FEE9E5409}"
              SQLTask:SqlStatementSource="exec survey_views.usp_etl_export_logs_log_message ?,?,?&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@p_export_profile_id"
                SQLTask:DtsVariableName="User::pkgCurrentExportProfileID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@p_export_profile_name"
                SQLTask:DtsVariableName="User::pkgCurrentExportProfileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@p_message"
                SQLTask:DtsVariableName="User::pkgCurrentExportProfileTypeID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Export Profile ID Loop Container\Log Message Completed - Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{E4119397-13D1-45DA-9915-9CC2E049E5A8}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Message Completed - Execute SQL Task"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{0274FEC8-9226-44E1-B83E-387FEE9E5409}"
              SQLTask:SqlStatementSource="exec survey_views.usp_etl_export_logs_log_message ?, ?, 'completed profileid extract'&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@p_export_profile_id"
                SQLTask:DtsVariableName="User::pkgCurrentExportProfileID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@p_export_profile_name"
                SQLTask:DtsVariableName="User::pkgCurrentExportProfileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Export Profile ID Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{655293B2-2077-4296-90CD-093286F07147}"
          DTS:From="Package\Foreach Export Profile ID Loop Container\Get Export Profile TYPE - Execute SQL Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Export Profile ID Loop Container\Log Message - Execute SQL Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Export Profile ID Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{5C715615-AD42-42A0-B82F-6E8441BF5219}"
          DTS:From="Package\Foreach Export Profile ID Loop Container\Log Message - Execute SQL Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Export Profile ID Loop Container\Extract Surveys - Script Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Export Profile ID Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{FFF2632A-F6B1-4FD5-9549-5F279E2F025D}"
          DTS:From="Package\Foreach Export Profile ID Loop Container\Extract Surveys - Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Export Profile ID Loop Container\Log Message Completed - Execute SQL Task" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{CCC20863-981E-49E2-A401-7DC77CDF17C3}"
          DTS:ObjectName="{CCC20863-981E-49E2-A401-7DC77CDF17C3}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::pkgCurrentExportProfileID" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{FB90D4BA-2EDB-4CD4-84C5-61D2533567E0}"
          DTS:ObjectName="{FB90D4BA-2EDB-4CD4-84C5-61D2533567E0}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::pkgCurrentExportProfileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Export Profile IDs - Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8FA64E89-EABB-486D-869E-C0A9BFD2BF21}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Export Profile IDs - Execute SQL Task"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0274FEC8-9226-44E1-B83E-387FEE9E5409}"
          SQLTask:SqlStatementSource="exec survey_views.usp_etl_exportprofiles_select&#xA;"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::pkgExportProfiles" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{5A1598EB-2CAF-438B-BF20-3FFE8615025A}"
      DTS:From="Package\Get Export Profile IDs - Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Export Profile ID Loop Container" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="214.4,41.6"
          Id="Package\Foreach Export Profile ID Loop Container\Extract Surveys - Script Task"
          TopLeft="480.730158708533,176.758170001372" />
        <NodeLayout
          Size="252,41.6"
          Id="Package\Foreach Export Profile ID Loop Container\Get Export Profile TYPE - Execute SQL Task"
          TopLeft="471,34" />
        <NodeLayout
          Size="235.2,41.6"
          Id="Package\Foreach Export Profile ID Loop Container\Log Message - Execute SQL Task"
          TopLeft="481,108" />
        <NodeLayout
          Size="288,41.6"
          Id="Package\Foreach Export Profile ID Loop Container\Log Message Completed - Execute SQL Task"
          TopLeft="443.111109597342,260.359477143249" />
        <EdgeLayout
          Id="Package\Foreach Export Profile ID Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="597.75,76">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Export Profile ID Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="598.6,149.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-10.6698412914666,27.1581700013721"
              Start="0,0"
              End="-10.6698412914666,19.6581700013721">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.57908500068604" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.57908500068604"
                    Point2="0,13.579085000686"
                    Point3="-4,13.579085000686" />
                  <mssgle:LineSegment
                    End="-6.66984129146658,13.579085000686" />
                  <mssgle:CubicBezierSegment
                    Point1="-6.66984129146658,13.579085000686"
                    Point2="-10.6698412914666,13.579085000686"
                    Point3="-10.6698412914666,17.579085000686" />
                  <mssgle:LineSegment
                    End="-10.6698412914666,19.6581700013721" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Export Profile ID Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="587.520634152938,218.358170001372">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.001307141877"
              Start="0,0"
              End="0,34.501307141877">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.501307141877" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1176.8,356"
          Size="1176.8,399.2"
          Id="Package\Foreach Export Profile ID Loop Container"
          TopLeft="49,225" />
        <NodeLayout
          Size="276,41.6"
          Id="Package\Get Export Profile IDs - Execute SQL Task"
          TopLeft="500,65" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="637.7,106.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,118.4"
              Start="0,0"
              End="0,110.9">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,110.9" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>