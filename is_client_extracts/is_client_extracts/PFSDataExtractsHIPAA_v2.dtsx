<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/2/2017 12:53:58 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NFPLAP246"
  DTS:CreatorName="NFPDEN\BVonminden"
  DTS:DTSID="{1DBBF4F7-4D35-493D-A3CF-3C7184D851EE}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.1000.169"
  DTS:LocaleID="1033"
  DTS:MaxConcurrentExecutables="1"
  DTS:ObjectName="PFSDataExtractsHIPAA_v2"
  DTS:PackageType="5"
  DTS:VersionBuild="66"
  DTS:VersionGUID="{B7418C15-ABA8-492C-A6D9-69DD5B45A608}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DWH]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{0274FEC8-9226-44E1-B83E-387FEE9E5409}"
      DTS:ObjectName="DWH">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=nfplap246;Initial Catalog=dwh_test;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{4E7A2CBB-3FCE-4A4A-8FEC-C6C4961A7F18}"
      DTS:ObjectName="pClientName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{E2CE12BD-9141-4A7A-86BF-CC2B9C302E3C}"
      DTS:ObjectName="pFileName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{88EED214-261A-435F-843C-A7449D6B3E95}"
      DTS:ObjectName="pFormatCode">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{737E3014-621C-4CFD-87BD-110136792545}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="pkgCurrentExportProfileID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A1E900EB-9AEA-4815-801C-C1F8624AD71B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="pkgCurrentExportProfileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6816DE50-2653-4940-BE96-A684A2F78DB7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="pkgCurrentExportProfileTypeID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BB425C3F-D33D-4921-84C6-104AF0F10D4F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="pkgDWHConnection">
      <DTS:VariableValue
        DTS:DataType="8">Server=nfplap246;Database=dwh_test;Integrated Security=true</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{88058CF7-0EF6-45BF-89DF-D209400DF6C5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="pkgExportProfiles">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{914DAAFD-F37C-4D0F-AC64-05470C9E5001}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="pkgExtractRootPath">
      <DTS:VariableValue
        DTS:DataType="8">c:\temp\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Export Profile ID Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{020255EB-F639-4CB8-920F-66ECBFE136B2}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Export Profile ID Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{BE1000F6-D3D6-48C3-94E6-CCBA6C712DA6}"
        DTS:ObjectName="{BE1000F6-D3D6-48C3-94E6-CCBA6C712DA6}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::pkgExportProfiles" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Export Profile ID Loop Container\Extract Surveys - Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{4DBB267E-3013-460B-B765-DA6965EC134E}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Extract Surveys - Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_e0a2ed466f1343b391285456eb43d496"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::pkgCurrentExportProfileID,User::pkgCurrentExportProfileName,User::pkgCurrentExportProfileTypeID,User::pkgDWHConnection,User::pkgExtractRootPath">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e0a2ed466f1343b391285456eb43d496.Properties.Settings.get_Default():ST_e0a2ed466f1343b391285456eb43d496.Properties.Sett" +
    "ings")]

namespace ST_e0a2ed466f1343b391285456eb43d496.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_e0a2ed466f1343b391285456eb43d496.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{2D137505-34C2-42F7-88D5-0FC7D5E13349}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_e0a2ed466f1343b391285456eb43d496</RootNamespace>
    <AssemblyName>ST_e0a2ed466f1343b391285456eb43d496</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="DynamicExportComponent.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_e0a2ed466f1343b391285456eb43d496
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string      rootFolderPath                  = (string)Dts.Variables["pkgExtractRootPath"].Value;
            string      dWHTargetConnection             = (string)Dts.Variables["pkgDWHConnection"].Value;
            string      currentExportProfileName        = (string)Dts.Variables["pkgCurrentExportProfileName"].Value;
            int         currentExportProfileID          = (int)Dts.Variables["pkgCurrentExportProfileID"].Value;
            int         currentExportProfileTypeID      = (int)Dts.Variables["pkgCurrentExportProfileTypeID"].Value;
                        
            try
            {
                bool fireAgain = true;
                DynamicExportComponent dec = new DynamicExportComponent((p) => Dts.Events.FireProgress(p, 0, 0, 0, $"{nameof(ScriptMain)}", ref fireAgain));
                dec.process_export_profile(rootFolderPath, currentExportProfileID, currentExportProfileTypeID, currentExportProfileName, dWHTargetConnection);

            }
            catch (Exception ex)
            {

                Dts.Events.FireError(0, $"{nameof(ScriptMain)}", ex.Message, null, 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
                return;
            }


			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e0a2ed466f1343b391285456eb43d496.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e0a2ed466f1343b391285456eb43d496.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e0a2ed466f1343b391285456eb43d496.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e0a2ed466f1343b391285456eb43d496.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e0a2ed466f1343b391285456eb43d496.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_e0a2ed466f1343b391285456eb43d496</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_e0a2ed466f1343b391285456eb43d496</msb:DisplayName>
		<msb:ProjectId>{260302D1-E184-4050-9833-D811F4438551}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_e0a2ed466f1343b391285456eb43d496.csproj"/>
		<msb:File Include="DynamicExportComponent.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e0a2ed466f1343b391285456eb43d496")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_e0a2ed466f1343b391285456eb43d496")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="DynamicExportComponent.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using System.Data.SqlClient;


namespace ST_e0a2ed466f1343b391285456eb43d496
{
    public class DynamicExportComponent
    {
        List<string[]> _sproc_extract_targets;


        public Action<string> StatusReport { get; private set; }

        public DynamicExportComponent(Action<string> statusReporting) {

            StatusReport = statusReporting;

            _sproc_extract_targets = new List<string[]>();

            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Alternative_Encounter", "AlternativeEncounter" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Home_Visit_Encounter", "HomeVisitEncounter" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_PHQ_9", "PHQ"});
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_ASQ_3" ,"ASQ"});
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Demographics", "Demographics" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Infant_Birth", "InfantBirth" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Referrals_To_NFP_Program", "ReferralsToNFP" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Edinburgh_Postnatal_Depression_Scale", "Edinburgh" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Infant_Health_Care", "InfantHealthcare" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Maternal_Health_Assessment", "MaternalHealthAssesment" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Relationship_Assessment", "RelationshipAssesment" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_GAD_7", "GAD7" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_STAR_Framework", "STAR" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Client_Funding_Source", "ClientFunding" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Use_Of_Government_and_Community_Services", "Govt_Comm_Srvcs" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_DANCE_Coding_Sheet", "Dance" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_Health_Habits", "HealthHabits" });
            _sproc_extract_targets.Add(new[] { "survey_views.usp_select_NFP_Tribal_Project", "Tribal" });

            //  --missing client discharge
            //  --refferalstoservices missing
            //  --clients missing
            //  --enrollments and dissmissals missing
            //  --caseload missing

        }

        public void process_export_profile(string rootPath, int ExportProfileID, int ExportProfileType, string ExportProfileName,
            string source_connection_string) {

            // Tab Delimited (0) ePHI (BAA)
            // Tab Delimited (1) Limited ePHI (DUA) 
            // Pipe Delimited (4) ePHI (BAA)
            // Pipe Delimited (5) Limited ePHI (DUA)

            string fileExtension = (ExportProfileType == 0 | ExportProfileType == 1) 
                ? ".tab" 
                : 
                (ExportProfileType == 4 | ExportProfileType == 5) 
                ? ".bcp" 
                :  "";

            string delim = (ExportProfileType == 0 | ExportProfileType == 1)
                ? "\t"
                :
                (ExportProfileType == 4 | ExportProfileType == 5)
                ? "|"
                : "";

            try
            {
                    foreach (string[] sproc_target in _sproc_extract_targets)
                    {

                        string fileName = $"{rootPath}{ExportProfileName}\\{sproc_target[1]}{fileExtension}";

                        StatusReport($"{nameof(DynamicExportComponent)}:Got Call From {nameof(ExportProfileID)}:{ExportProfileID},"
                            + $"{nameof(ExportProfileName)}:{ExportProfileName}, target:{source_connection_string}, dumping to file:{fileName}");

                        SqlConnection connection = new SqlConnection(source_connection_string);
                        connection.Open();
                        SqlCommand sqlCmd   = connection.CreateCommand();
                        sqlCmd.CommandText  = $"{sproc_target[0]}";
                        sqlCmd.CommandType  = System.Data.CommandType.StoredProcedure;
                        sqlCmd.Parameters.Add(new SqlParameter("@p_Encrypt", false));
                        sqlCmd.Parameters.Add(new SqlParameter("@p_Profile_Id", ExportProfileID));
                        sqlCmd.Parameters.Add(new SqlParameter("@p_exclude_tribal", false));
                        SqlDataReader resultReader = sqlCmd.ExecuteReader();

                        if (!resultReader.HasRows)
                            continue;

                        StatusReport($"{resultReader.RecordsAffected} records returned for processing");

                        if(!Directory.Exists(rootPath + ExportProfileName))
                            Directory.CreateDirectory(rootPath + ExportProfileName);

                        using (TextWriter tr = File.CreateText(fileName))
                        {
                            int maxf = resultReader.FieldCount;
                            int maxr = resultReader.RecordsAffected;

                        for (int i = 0; i < maxf; i++)
                            if (i == maxf)
                                tr.WriteLine($"{resultReader.GetName(i)}");
                            else
                                tr.WriteLine($"{resultReader.GetName(i)}{delim}");


                        while (resultReader.Read())
                            for (int i = 0; i < maxf; i++)
                                if (i == maxf)
                                    tr.WriteLine($"{resultReader.GetValue(i)}");
                                else
                                    tr.WriteLine($"{resultReader.GetValue(i)}{delim}");


                         }


                    }
            }
            catch (Exception)
            {
                throw;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_e0a2ed466f1343b391285456eb43d496.dll">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
ngOcBQYAtwOcBQYADgOcBQYAKQNEBAYAFwg4BQYAKgC6AAYAkgLHBgYAIQA4BTsAnAYAAAoAJgY5
CAYAhAZ0AAYA4AU4BQ4A0gO2BA4AQQK2BAYAPwU4BQYArQK0BgYARgbnBgYA/QWHBRIAfQLxBBIA
3gLxBBIAXQJyBQYAXgQ4BQYAMQA4BQoA0gU5CAoAxQXqBQoAKAE5CAoAEAHqBQoA8wGlAAoArgU5
CAYAUAU4BQoAagY5CAoAGQbqBQYA2gh0AAYACQZ0AAYAjwF0AAYAdwZ0AAYAXwE4BQ4A3wS2BBYA
fQfFARYAVgHFAQ4AVga2BAYADAI4BQYAawE4BQYAywicBQAAAABbAAAAAAABAAEAAQAQAE8INwA1
AAEAAQABABAAXQU3AFkAAwAFAAAAEADuBkoHNQADAAcAAAEQAIcHSgd1AAUACwADAQAA3QcAAF0A
BgAOAAMBEAABAAAANQAJAA4AAQDGBz4BAQDyAEYBEQBEBU0BEQAxAlEBEQAzAVUBBgadAFkBVoCp
B1wBVoARAlwBBgBoBWABBgCQB2MBUCAAAAAAhgiBCGcBAQBYIAAAAACBCJIIbwEBAGQgAAAAAIYY
pwZvAQIA3CIAAAAAhgCUAXgBAwDcJQAAAACGAGMFBgAIABAnAAAAAIYYpwYGAAgAGCcAAAAAgxin
BgYACAAgJwAAAACTCEIGgQEIAEwnAAAAAJMIGQKGAQgAUycAAAAAkwglAosBCABbJwAAAACWCB4I
kQEJAGInAAAAAIYYpwYGAAkAaicAAAAAkRitBpYBCQAYJwAAAACGGKcGBgAJAHYnAAAAAIMAFgAQ
AAkAAAABAD4EAAABAH4EAAABAI4EAAACAGQAAAADAP8BAAAEAKsBAAAFAGUEAAABAD4EAAABABcG
CQCnBgEAEQCnBgYAGQCnBgoAKQCnBhAAMQCnBhAAOQCnBhAAQQCnBhAASQCnBhAAUQCnBhAAWQCn
BhAAYQCnBhAAeQCnBgYAqQCnBgYAwQCnBgYA4QCnBhUAaQCnBgYADACnBgYADADaACIADACZBj0A
FABmCE0A8QAQCFIA8QAQCFkA8QAJCGEAHABPASIAAQGnBhAACQFYBQYAAQEaAW0A8QAQCHMAGQGs
CBAAGQHvAXkAEQGaB4AAOQGnBoYAKQHaAIwAEQE0BpUAQQH9B5oAQQHeAJ4ASQH2B6IASQHUCKcA
WQG8CK4AQQFyCJ4AQQG9AbUAmQDlARAA8QAQCLoAQQE1BMEAQQHVAJoAaQF1AgYAFACjCJoAsQC+
B9AAcQF5B9YAeQEvBdwAgQErBOMAHACnBucAcQHrB+0AoQBDAfMAiQGPBvcAcQEqCAEAsQCnBgYA
kQF9AQABkQHHCAkByQCnBg8B6QCnBgYAiQGxBxcBCAAcADQBCAAgADkBIABjADkBLgALALEBLgAT
ALoBLgAbANkBLgAjAOIBLgArAAsCLgAzAAsCLgA7AAsCLgBDAOIBLgBLABECLgBTAAsCLgBbACgC
QABjADkBQQBjADkBSQB7ANkBYwBrADkBaQB7ANkBgwBzADkBoQBjADkB4wBjADkBKADGAAIAAQAE
AAIABQAEAAAAlgiaAQAARgaiAQAAOQKnAQAAIgisAQIAAQADAAEAAgADAAIACAAFAAIACQAHAAEA
CgAHAAIACwAJABsARgBnAASAAAABAAAAfhnMbgAAAAAAADcAAAAEAAAAAAAAAAAAAAAiAbEAAAAA
AAQAAAAAAAAAAAAAACIBpQAAAAAADgAAAAAAAAAAAAAAKwGXBAAAAAAEAAAAAAAAAAAAAAAiATgF
AAAAAA4AAAAAAAAAAAAAACsBfgAAAAAAAAAAAAEAAAD4BgAABgADAAcAAwAAAAAAADw+Y19fRGlz
cGxheUNsYXNzMF8wADxNYWluPmJfXzAAQWN0aW9uYDEATGlzdGAxAEludDMyAFNUX2UwYTJlZDQ2
NmYxMzQzYjM5MTI4NTQ1NmViNDNkNDk2ADxNb2R1bGU+AEV4cG9ydFByb2ZpbGVJRABTeXN0ZW0u
SU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU3lzdGVtLkRhdGEAbXNj
b3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAUmVhZABBZGQAZ2V0X1JlY29yZHNBZmZl
Y3RlZAA8U3RhdHVzUmVwb3J0PmtfX0JhY2tpbmdGaWVsZABEYkNvbW1hbmQAQ3JlYXRlQ29tbWFu
ZABTcWxDb21tYW5kAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBJbnZva2UAVmFyaWFibGUA
SURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBwcm9j
ZXNzX2V4cG9ydF9wcm9maWxlAEV4cG9ydFByb2ZpbGVOYW1lAEdldE5hbWUATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUnVudGltZQBXcml0ZUxpbmUAc2V0X0NvbW1hbmRUeXBlAEV4cG9ydFByb2Zp
bGVUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZT
VEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3Nl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
U1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAR2V0VmFsdWUAdmFsdWUA
U3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcAc291cmNlX2Nvbm5lY3Rpb25fc3RyaW5n
AHN0YXR1c1JlcG9ydGluZwByb290UGF0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2Rl
bABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfZTBhMmVkNDY2ZjEzNDNiMzkxMjg1NDU2ZWI0M2Q0
OTYuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAEJvb2xlYW4AT3BlbgBTY3Jp
cHRNYWluAGZpcmVBZ2FpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBTeXN0ZW0uUmVmbGVjdGlvbgBTcWxQYXJhbWV0ZXJDb2xsZWN0aW9uAERiQ29ubmVjdGlvbgBT
cWxDb25uZWN0aW9uAEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AQ3VsdHVyZUluZm8ARGly
ZWN0b3J5SW5mbwBwAERiRGF0YVJlYWRlcgBTcWxEYXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIAZ2V0
X1Jlc291cmNlTWFuYWdlcgBFdmVudHNPYmplY3RXcmFwcGVyAFNxbFBhcmFtZXRlcgBTdHJlYW1X
cml0ZXIAVGV4dFdyaXRlcgBGaXJlRXJyb3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAU3lz
dGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJl
c291cmNlcwBTVF9lMGEyZWQ0NjZmMTM0M2IzOTEyODU0NTZlYjQzZDQ5Ni5Qcm9wZXJ0aWVzLlJl
c291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfZTBhMmVkNDY2ZjEzNDNiMzkxMjg1
NDU2ZWI0M2Q0OTYuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzADw+NF9fdGhpcwBn
ZXRfUGFyYW1ldGVycwBTdWNjZXNzAEZpcmVQcm9ncmVzcwBnZXRfRHRzAF9zcHJvY19leHRyYWN0
X3RhcmdldHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAEV4aXN0cwBnZXRfSGFzUm93cwBDb25j
YXQARm9ybWF0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YS5T
cWxDbGllbnQARHluYW1pY0V4cG9ydENvbXBvbmVudABnZXRfQ3VycmVudABnZXRfRmllbGRDb3Vu
dABnZXRfU3RhdHVzUmVwb3J0AHNldF9TdGF0dXNSZXBvcnQATW92ZU5leHQAc2V0X0NvbW1hbmRU
ZXh0AENyZWF0ZVRleHQAZ2V0X0Fzc2VtYmx5AENyZWF0ZURpcmVjdG9yeQAAW3MAdQByAHYAZQB5
AF8AdgBpAGUAdwBzAC4AdQBzAHAAXwBzAGUAbABlAGMAdABfAEEAbAB0AGUAcgBuAGEAdABpAHYA
ZQBfAEUAbgBjAG8AdQBuAHQAZQByAAApQQBsAHQAZQByAG4AYQB0AGkAdgBlAEUAbgBjAG8AdQBu
AHQAZQByAABZcwB1AHIAdgBlAHkAXwB2AGkAZQB3AHMALgB1AHMAcABfAHMAZQBsAGUAYwB0AF8A
SABvAG0AZQBfAFYAaQBzAGkAdABfAEUAbgBjAG8AdQBuAHQAZQByAAAlSABvAG0AZQBWAGkAcwBp
AHQARQBuAGMAbwB1AG4AdABlAHIAADtzAHUAcgB2AGUAeQBfAHYAaQBlAHcAcwAuAHUAcwBwAF8A
cwBlAGwAZQBjAHQAXwBQAEgAUQBfADkAAAdQAEgAUQAAO3MAdQByAHYAZQB5AF8AdgBpAGUAdwBz
AC4AdQBzAHAAXwBzAGUAbABlAGMAdABfAEEAUwBRAF8AMwAAB0EAUwBRAABJcwB1AHIAdgBlAHkA
XwB2AGkAZQB3AHMALgB1AHMAcABfAHMAZQBsAGUAYwB0AF8ARABlAG0AbwBnAHIAYQBwAGgAaQBj
AHMAABlEAGUAbQBvAGcAcgBhAHAAaABpAGMAcwAASXMAdQByAHYAZQB5AF8AdgBpAGUAdwBzAC4A
dQBzAHAAXwBzAGUAbABlAGMAdABfAEkAbgBmAGEAbgB0AF8AQgBpAHIAdABoAAAXSQBuAGYAYQBu
AHQAQgBpAHIAdABoAABhcwB1AHIAdgBlAHkAXwB2AGkAZQB3AHMALgB1AHMAcABfAHMAZQBsAGUA
YwB0AF8AUgBlAGYAZQByAHIAYQBsAHMAXwBUAG8AXwBOAEYAUABfAFAAcgBvAGcAcgBhAG0AAB1S
AGUAZgBlAHIAcgBhAGwAcwBUAG8ATgBGAFAAAHlzAHUAcgB2AGUAeQBfAHYAaQBlAHcAcwAuAHUA
cwBwAF8AcwBlAGwAZQBjAHQAXwBFAGQAaQBuAGIAdQByAGcAaABfAFAAbwBzAHQAbgBhAHQAYQBs
AF8ARABlAHAAcgBlAHMAcwBpAG8AbgBfAFMAYwBhAGwAZQAAE0UAZABpAG4AYgB1AHIAZwBoAABV
cwB1AHIAdgBlAHkAXwB2AGkAZQB3AHMALgB1AHMAcABfAHMAZQBsAGUAYwB0AF8ASQBuAGYAYQBu
AHQAXwBIAGUAYQBsAHQAaABfAEMAYQByAGUAACFJAG4AZgBhAG4AdABIAGUAYQBsAHQAaABjAGEA
cgBlAABlcwB1AHIAdgBlAHkAXwB2AGkAZQB3AHMALgB1AHMAcABfAHMAZQBsAGUAYwB0AF8ATQBh
AHQAZQByAG4AYQBsAF8ASABlAGEAbAB0AGgAXwBBAHMAcwBlAHMAcwBtAGUAbgB0AAAvTQBhAHQA
ZQByAG4AYQBsAEgAZQBhAGwAdABoAEEAcwBzAGUAcwBtAGUAbgB0AABfcwB1AHIAdgBlAHkAXwB2
AGkAZQB3AHMALgB1AHMAcABfAHMAZQBsAGUAYwB0AF8AUgBlAGwAYQB0AGkAbwBuAHMAaABpAHAA
XwBBAHMAcwBlAHMAcwBtAGUAbgB0AAArUgBlAGwAYQB0AGkAbwBuAHMAaABpAHAAQQBzAHMAZQBz
AG0AZQBuAHQAADtzAHUAcgB2AGUAeQBfAHYAaQBlAHcAcwAuAHUAcwBwAF8AcwBlAGwAZQBjAHQA
XwBHAEEARABfADcAAAlHAEEARAA3AABNcwB1AHIAdgBlAHkAXwB2AGkAZQB3AHMALgB1AHMAcABf
AHMAZQBsAGUAYwB0AF8AUwBUAEEAUgBfAEYAcgBhAG0AZQB3AG8AcgBrAAAJUwBUAEEAUgAAW3MA
dQByAHYAZQB5AF8AdgBpAGUAdwBzAC4AdQBzAHAAXwBzAGUAbABlAGMAdABfAEMAbABpAGUAbgB0
AF8ARgB1AG4AZABpAG4AZwBfAFMAbwB1AHIAYwBlAAAbQwBsAGkAZQBuAHQARgB1AG4AZABpAG4A
ZwAAgIFzAHUAcgB2AGUAeQBfAHYAaQBlAHcAcwAuAHUAcwBwAF8AcwBlAGwAZQBjAHQAXwBVAHMA
ZQBfAE8AZgBfAEcAbwB2AGUAcgBuAG0AZQBuAHQAXwBhAG4AZABfAEMAbwBtAG0AdQBuAGkAdAB5
AF8AUwBlAHIAdgBpAGMAZQBzAAAfRwBvAHYAdABfAEMAbwBtAG0AXwBTAHIAdgBjAHMAAFVzAHUA
cgB2AGUAeQBfAHYAaQBlAHcAcwAuAHUAcwBwAF8AcwBlAGwAZQBjAHQAXwBEAEEATgBDAEUAXwBD
AG8AZABpAG4AZwBfAFMAaABlAGUAdAAAC0QAYQBuAGMAZQAAS3MAdQByAHYAZQB5AF8AdgBpAGUA
dwBzAC4AdQBzAHAAXwBzAGUAbABlAGMAdABfAEgAZQBhAGwAdABoAF8ASABhAGIAaQB0AHMAABlI
AGUAYQBsAHQAaABIAGEAYgBpAHQAcwAAVXMAdQByAHYAZQB5AF8AdgBpAGUAdwBzAC4AdQBzAHAA
XwBzAGUAbABlAGMAdABfAE4ARgBQAF8AVAByAGkAYgBhAGwAXwBQAHIAbwBqAGUAYwB0AAANVABy
AGkAYgBhAGwAAAEACS4AYgBjAHAAAAkuAHQAYQBiAAADfAAAAwkAABt7ADAAfQB7ADEAfQBcAHsA
MgB9AHsAMwB9AAA1ewAwAH0AOgBHAG8AdAAgAEMAYQBsAGwAIABGAHIAbwBtACAAewAxAH0AOgB7
ADIAfQAsAAAtRAB5AG4AYQBtAGkAYwBFAHgAcABvAHIAdABDAG8AbQBwAG8AbgBlAG4AdAAAH0UA
eABwAG8AcgB0AFAAcgBvAGYAaQBsAGUASQBEAABRewAwAH0AOgB7ADEAfQAsACAAdABhAHIAZwBl
AHQAOgB7ADIAfQAsACAAZAB1AG0AcABpAG4AZwAgAHQAbwAgAGYAaQBsAGUAOgB7ADMAfQAAI0UA
eABwAG8AcgB0AFAAcgBvAGYAaQBsAGUATgBhAG0AZQAAB3sAMAB9AAAVQABwAF8ARQBuAGMAcgB5
AHAAdAAAG0AAcABfAFAAcgBvAGYAaQBsAGUAXwBJAGQAACNAAHAAXwBlAHgAYwBsAHUAZABlAF8A
dAByAGkAYgBhAGwAAEd7ADAAfQAgAHIAZQBjAG8AcgBkAHMAIAByAGUAdAB1AHIAbgBlAGQAIABm
AG8AcgAgAHAAcgBvAGMAZQBzAHMAaQBuAGcAAA17ADAAfQB7ADEAfQAAJXAAawBnAEUAeAB0AHIA
YQBjAHQAUgBvAG8AdABQAGEAdABoAAAhcABrAGcARABXAEgAQwBvAG4AbgBlAGMAdABpAG8AbgAA
N3AAawBnAEMAdQByAHIAZQBuAHQARQB4AHAAbwByAHQAUAByAG8AZgBpAGwAZQBOAGEAbQBlAAAz
cABrAGcAQwB1AHIAcgBlAG4AdABFAHgAcABvAHIAdABQAHIAbwBmAGkAbABlAEkARAAAO3AAawBn
AEMAdQByAHIAZQBuAHQARQB4AHAAbwByAHQAUAByAG8AZgBpAGwAZQBUAHkAcABlAEkARAAAFVMA
YwByAGkAcAB0AE0AYQBpAG4AAHFTAFQAXwBlADAAYQAyAGUAZAA0ADYANgBmADEAMwA0ADMAYgAz
ADkAMQAyADgANQA0ADUANgBlAGIANAAzAGQANAA5ADYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4A
UgBlAHMAbwB1AHIAYwBlAHMAAAAA6vVK7rB+7U+YK+CxL50iwAAEIAEBCAMgAAEFIAEBEREEIAEB
DgUgAQERbQYVEjkBHQ4FIAEBEwAUBwoODhURRQEdDh0ODhJJEk0ICAgIIAAVEUUBEwAGFRFFAR0O
BCAAEwAGAAIODh0cBwAEDg4cHBwFAAIODg4FFRJBAQ4FIAASgIkFAAIODhwGIAEBEYCRBSAAEoCV
BSACAQ4cCCABEoCdEoCdBCAAEkkDIAACAyAACAQAAQIOBgABEoCpDgYAARKAsQ4EIAEOCAYAAw4O
HBwEIAEcCAkHBg4ODggIElEFIAASgLkFIAASgL0GIAESgMEcAyAAHAUgAgEcGAUgABKAxQMgAA4I
IAUCCA4ODggIAAESgMkRgM0FIAASgNEHIAIBDhKA0QogBgEOCAgIDhACCLd6XFYZNOCJCImEXc2A
gMyRBAAAAAAEAQAAAAcGFRI5AR0OBgYVEkEBDgMGEmUDBhJpAwYSFAIGCAMGERgCBgIDBhIMByAA
FRJBAQ4IIAEBFRJBAQ4IIAUBDggIDg4EAAASZQQAABJpBQABARJpBAAAEhQDAAABBygAFRJBAQ4E
CAASZQQIABJpBAgAEhQIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEA
AgAAAAAAKAEAI1NUX2UwYTJlZDQ2NmYxMzQzYjM5MTI4NTQ1NmViNDNkNDk2AAAFAQAAAAAWAQAR
Q29weXJpZ2h0IEAgIDIwMTcAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJh
bWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41AAC0AAAAzsrvvgEAAACRAAAAbFN5
c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAs
IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0u
UmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAxEUAAAAA
AAAAAAAA3kUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAANBFAAAAAAAAAAAAAAAAX0NvckRsbE1h
aW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAa
BAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAzG5+GQAAAQDMbn4ZPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
egMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAw
AAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0A
ZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBl
ADAAYQAyAGUAZAA0ADYANgBmADEAMwA0ADMAYgAzADkAMQAyADgANQA0ADUANgBlAGIANAAzAGQA
NAA5ADYAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgA1ADIANgAu
ADIAOAAzADYANAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBlADAA
YQAyAGUAZAA0ADYANgBmADEAMwA0ADMAYgAzADkAMQAyADgANQA0ADUANgBlAGIANAAzAGQANAA5
ADYALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkA
cgBpAGcAaAB0ACAAQAAgACAAMgAwADEANwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBh
AHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMA
VABfAGUAMABhADIAZQBkADQANgA2AGYAMQAzADQAMwBiADMAOQAxADIAOAA1ADQANQA2AGUAYgA0
ADMAZAA0ADkANgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQA
XwBlADAAYQAyAGUAZAA0ADYANgBmADEAMwA0ADMAYgAzADkAMQAyADgANQA0ADUANgBlAGIANAAz
AGQANAA5ADYAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYA
NQAyADYALgAyADgAMwA2ADQAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADYANQAyADYALgAyADgAMwA2ADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA8DUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Export Profile ID Loop Container\Get Export Profile TYPE - Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{629BA209-3CB4-4C4B-B6CC-F20D2DDD49BF}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Export Profile TYPE - Execute SQL Task"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{0274FEC8-9226-44E1-B83E-387FEE9E5409}"
              SQLTask:SqlStatementSource="exec survey_views.usp_etl_exportprofiles_get_export_type_for_export_profile_id  ?"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::pkgCurrentExportProfileTypeID" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@p_export_profile_id"
                SQLTask:DtsVariableName="User::pkgCurrentExportProfileID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Export Profile ID Loop Container\Log Message - Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{FD2B68D0-6773-4627-A90F-E911727DF770}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Message - Execute SQL Task"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{0274FEC8-9226-44E1-B83E-387FEE9E5409}"
              SQLTask:SqlStatementSource="exec survey_views.usp_etl_export_logs_log_message ?,?,?&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@p_export_profile_id"
                SQLTask:DtsVariableName="User::pkgCurrentExportProfileID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@p_export_profile_name"
                SQLTask:DtsVariableName="User::pkgCurrentExportProfileName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@p_message"
                SQLTask:DtsVariableName="User::pkgCurrentExportProfileTypeID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Export Profile ID Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{655293B2-2077-4296-90CD-093286F07147}"
          DTS:From="Package\Foreach Export Profile ID Loop Container\Get Export Profile TYPE - Execute SQL Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Export Profile ID Loop Container\Log Message - Execute SQL Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Export Profile ID Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{5C715615-AD42-42A0-B82F-6E8441BF5219}"
          DTS:From="Package\Foreach Export Profile ID Loop Container\Log Message - Execute SQL Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Export Profile ID Loop Container\Extract Surveys - Script Task" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{CCC20863-981E-49E2-A401-7DC77CDF17C3}"
          DTS:ObjectName="{CCC20863-981E-49E2-A401-7DC77CDF17C3}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::pkgCurrentExportProfileID" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{FB90D4BA-2EDB-4CD4-84C5-61D2533567E0}"
          DTS:ObjectName="{FB90D4BA-2EDB-4CD4-84C5-61D2533567E0}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::pkgCurrentExportProfileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Export Profile IDs - Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8FA64E89-EABB-486D-869E-C0A9BFD2BF21}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Export Profile IDs - Execute SQL Task"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0274FEC8-9226-44E1-B83E-387FEE9E5409}"
          SQLTask:SqlStatementSource="exec survey_views.usp_etl_exportprofiles_select&#xA;"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::pkgExportProfiles" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{5A1598EB-2CAF-438B-BF20-3FFE8615025A}"
      DTS:From="Package\Get Export Profile IDs - Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Export Profile ID Loop Container" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="214,42"
          Id="Package\Foreach Export Profile ID Loop Container\Extract Surveys - Script Task"
          TopLeft="489,200" />
        <NodeLayout
          Size="252,42"
          Id="Package\Foreach Export Profile ID Loop Container\Get Export Profile TYPE - Execute SQL Task"
          TopLeft="471,34" />
        <NodeLayout
          Size="235,42"
          Id="Package\Foreach Export Profile ID Loop Container\Log Message - Execute SQL Task"
          TopLeft="481,108" />
        <EdgeLayout
          Id="Package\Foreach Export Profile ID Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="597.75,76">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Export Profile ID Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="597.25,150">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1177,316"
          Size="1177,359"
          Id="Package\Foreach Export Profile ID Loop Container"
          TopLeft="49,225" />
        <NodeLayout
          Size="276,42"
          Id="Package\Get Export Profile IDs - Execute SQL Task"
          TopLeft="500,65" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="637.75,107">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,118"
              Start="0,0"
              End="0,110.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,110.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>