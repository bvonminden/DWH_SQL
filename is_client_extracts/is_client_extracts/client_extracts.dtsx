<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/28/2017 12:09:36 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="NFPLAP246"
  DTS:CreatorName="NFPDEN\BVonminden"
  DTS:DTSID="{E4E1E847-6B27-456A-AB45-20115D4A4960}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.1000.169"
  DTS:LocaleID="1033"
  DTS:ObjectName="client_extracts"
  DTS:PackageType="5"
  DTS:VersionBuild="64"
  DTS:VersionGUID="{1D119083-33DD-476D-A34E-8537D00C2F5B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DWH]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B24A8696-0D23-46C7-8262-CA7455E2AD5A}"
      DTS:ObjectName="DWH">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=nfpdw-dev.database.windows.net;User ID=etl07;Initial Catalog=dwhdev07;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA1eQza6CVjUi6paQF+3MPVAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAACleUK0dgUZ2csPtlrWjqGcAAAAAASAAACgAAAAEAAAAJ3ue1JnM3u+ZW9flcHzxJYgAAAAqjHxOK2JmD5gEJEF6C/Qq99v8v2o7K7GhvWK1cLiHF4UAAAAp57jNI0IEhXuHAvVj05zyb9tZG0</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7E64D523-62D3-4F03-A396-1329C33A60B0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentExportFormatCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{06233FB8-3866-4D0D-936E-36C081B651B5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentExportProfileID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A72505FF-0B65-4AA9-B3CC-C998A10E6EAC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentExportTypeID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CB4F0C42-BB4F-4FDC-AC8F-B89C63FC15D7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentProfileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F5C4D99D-295F-4E70-BC2A-ADEE5B1BA55E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentSessionToken">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F196898E-039F-41FA-8B70-818BA889852B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExportFileLocation">
      <DTS:VariableValue
        DTS:DataType="8">c:\temp\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B8F74E34-29D9-4C2E-A676-14F5032388C5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="oExportProfileIDs">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{460FD550-749C-41D6-8F20-B6BFBEBADD7F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceSqlServer">
      <DTS:VariableValue
        DTS:DataType="8">Server=nfpdw-dev.database.windows.net;Database=dwhdev07;Connection Timeout=0;user=etl07;password=Welcome2NFP!</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8FBA08B0-52AE-40B9-A9CA-6FB87971D102}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Variable">
      <DTS:VariableValue
        DTS:DataType="8">Server=nfplap246;Database=dwh_test;Connection Timeout=0;user=sa;password=99Forall</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task - Get Work"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{5F2AF5E2-AC15-4A34-B619-09BBD4111807}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task - Get Work"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B24A8696-0D23-46C7-8262-CA7455E2AD5A}"
          SQLTask:SqlStatementSource="select &#xA;*&#xA;from survey_views.f_get_survey_etl_work()"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::oExportProfileIDs" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container - Perform ETL Work For Each ExportProfileID"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{AEB8280C-AB2D-4EC1-A8B4-351BBBD03152}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container - Perform ETL Work For Each ExportProfileID">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{C461B17F-05A7-4C85-AEB3-680FDBE85118}"
        DTS:ObjectName="{C461B17F-05A7-4C85-AEB3-680FDBE85118}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::oExportProfileIDs" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container - Perform ETL Work For Each ExportProfileID\Execute SQL Task - Update ExportProfileID Extract Status"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{D278F42B-E786-42CA-AC4A-1B89CE3EC580}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task - Update ExportProfileID Extract Status"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{B24A8696-0D23-46C7-8262-CA7455E2AD5A}"
              SQLTask:SqlStatementSource="select null;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container - Perform ETL Work For Each ExportProfileID\Script Task - Create Session Token"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{AE44F4C8-C0C7-4BE8-AB41-B463069691B3}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task - Create Session Token"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_040c98c4a5a047d495d028ff6268eb9a"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::CurrentProfileName"
              ReadWriteVariables="User::CurrentSessionToken">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_040c98c4a5a047d495d028ff6268eb9a.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A9FE73F7-4FC7-4646-802E-2D2C2D942ED9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_040c98c4a5a047d495d028ff6268eb9a</RootNamespace>
    <AssemblyName>ST_040c98c4a5a047d495d028ff6268eb9a</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_040c98c4a5a047d495d028ff6268eb9a
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            Dts.Variables["CurrentSessionToken"].Value = ($"{Dts.Variables["CurrentProfileName"].Value} : {DateTime.Now}").GetHashCode().ToString();
            bool FireAgain = true;
            Dts.Events.FireInformation(0,$"{nameof(ScriptMain)}",$"Session Token : {Dts.Variables["CurrentSessionToken"].Value}","",0, ref FireAgain);

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_040c98c4a5a047d495d028ff6268eb9a</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_040c98c4a5a047d495d028ff6268eb9a</msb:DisplayName>
		<msb:ProjectId>{6024EE3F-8F1C-4E68-AE67-C6952B71B7D6}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_040c98c4a5a047d495d028ff6268eb9a.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_040c98c4a5a047d495d028ff6268eb9a.Properties.Settings.get_Default():ST_040c98c4a5a047d495d028ff6268eb9a.Properties.Sett" +
    "ings")]

namespace ST_040c98c4a5a047d495d028ff6268eb9a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_040c98c4a5a047d495d028ff6268eb9a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_040c98c4a5a047d495d028ff6268eb9a")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_040c98c4a5a047d495d028ff6268eb9a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_040c98c4a5a047d495d028ff6268eb9a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_040c98c4a5a047d495d028ff6268eb9a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_040c98c4a5a047d495d028ff6268eb9a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_040c98c4a5a047d495d028ff6268eb9a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_040c98c4a5a047d495d028ff6268eb9a.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMGFH1oAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAbi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABwvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
LwAAAAAAAEgAAAACAAUAdCEAAPAMAAABAAAAAAAAAGQuAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBwCwAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACnIp
AABwAigQAAAKbxEAAApyPQAAcG8SAAAKbxMAAAooFAAACowbAAABKBUAAApvFgAACgsSASgXAAAK
bxgAAAoXCgIoEAAACm8ZAAAKFnJjAABwcmsAAHAoGgAACnKBAABwAigQAAAKbxEAAApyAQAAcG8S
AAAKbxMAAAooGgAACnKpAABwFhIAbxsAAAoCKBAAAAoWbxwAAAoqHgIoHQAACioeAigeAAAKKq5+
AQAABC0ecqsAAHDQAwAAAigfAAAKbyAAAApzIQAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQq
Gn4DAAAEKh4CKCIAAAoqLnMIAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAAAABAAAI34AAGwEAADABQAAI1N0cmluZ3MAAAAALAoAACABAAAjVVMATAsAABAAAAAj
R1VJRAAAAFwLAACUAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAIQAAAAUA
AAAGAAAACQAAAAEAAAAiAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAA
AAAAmgMBAAAAAAAGAEACjgQGAM8CjgQGAIwBewQPAAIFAAAGALkBKAQGACMCKAQGAAQCKAQGALYC
KAQGAGACKAQGAHkCKAQGANABKAQGAOsBBwMKAJQCSQMKAAsBSQMGANIDywMGAG8BewQGAIcFywMG
AEoErgQGADoEEwQOAD8BhAMOAKABhAMOACcB/gMGAFQBjgQKAHIDSQMSAEQFtgASAIAAtgAGAK0A
ywMGACMDywMGAAEAywMKAFoESQMGANYAywMGAIkAywMGALUFKAQAAAAABwAAAAAAAQABAAEAEADj
AzcAOQABAAEAAAAQALUEEQVFAAEAAwAAARAATgURBVkAAwAHAAMBAABnBQAAPQAEAAoAEQDXA5UA
EQD7AJkAEQBkAJ0ABgYvAKEAVoBXBaQAVoDbAKQAUCAAAAAAhgDpAwYAAQAMIQAAAACGGG4EBgAB
ABQhAAAAAIMYbgQGAAEAHCEAAAAAkwhGBKgAAQBIIQAAAACTCOMArQABAE8hAAAAAJMI7wCyAAEA
VyEAAAAAlgiOBbgAAgBeIQAAAACGGG4EBgACAGYhAAAAAJEYdAS9AAIAAAABAAEDCQBuBAEAEQBu
BAYAGQBuBAoAKQBuBBAAMQBuBBAAOQBuBBAAQQBuBBAASQBuBBAAUQBuBBAAWQBuBBAAYQBuBBAA
aQBuBAYAgQBuBAYAqQBuBBUAuQBuBAYAcQBfBSAAwQBABSUAyQDCAyoA0QDtAjAA2QCpBTQA4QCA
BTkAiQB0AEAA6QAhA0QA0QD3AkgAwQB1BU0A4QCABVIA8QDuA1gAwQCaBQEAcQBuBAYAiQBuBAYA
+QCbAGMA+QCxBWsAkQBuBHEAsQBuBAYACAAUAIsACAAYAJAAKQBzAPgALgALANAALgATANkALgAb
APgALgAjAAEBLgArACoBLgAzACoBLgA7ACoBLgBDAAEBLgBLADABLgBTACoBLgBbAEcBQwBjAJAA
SQBzAPgAYQB7AJAAYwBrAJAAGwADAAEABAADAAAASgTBAAAAAwHGAAAAkgXLAAIABAADAAIABQAF
AAEABgAFAAIABwAHAASAAAABAAAAjhlolQAAAAAAADcAAAAEAAAAAAAAAAAAAAB5AFsAAAAAAA4A
AAAAAAAAAAAAAIIAKgMAAAAABAAAAAAAAAAAAAAAeQDLAwAAAAAOAAAAAAAAAAAAAACCABAAAAAA
AAAAAAABAAAAvwQAAAUAAgAAAAAAAEludDMyADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
TWFuYWdlZERUUwB2YWx1ZV9fAFNUXzA0MGM5OGM0YTVhMDQ3ZDQ5NWQwMjhmZjYyNjhlYjlhAG1z
Y29ybGliAGRlZmF1bHRJbnN0YW5jZQBHZXRIYXNoQ29kZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5S
dW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1
cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVk
aXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9u
VXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRy
aWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBU
YXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFz
c2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0
ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJ
U1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBS
dW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5
c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3Jp
cHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2Jq
ZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzA0MGM5OGM0YTVhMDQ3ZDQ5NWQwMjhm
ZjYyNjhlYjlhLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWlu
AEZpcmVJbmZvcm1hdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlv
bgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAEV2ZW50
c09iamVjdFdyYXBwZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVu
dGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMDQwYzk4YzRhNWEwNDdk
NDk1ZDAyOGZmNjI2OGViOWEuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2lu
Z01vZGVzAFNUXzA0MGM5OGM0YTVhMDQ3ZDQ5NWQwMjhmZjYyNjhlYjlhLlByb3BlcnRpZXMAZ2V0
X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZl
bnRzAEZvcm1hdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X05vdwBnZXRf
QXNzZW1ibHkAAAAAJ0MAdQByAHIAZQBuAHQAUwBlAHMAcwBpAG8AbgBUAG8AawBlAG4AABN7ADAA
fQAgADoAIAB7ADEAfQAAJUMAdQByAHIAZQBuAHQAUAByAG8AZgBpAGwAZQBOAGEAbQBlAAAHewAw
AH0AABVTAGMAcgBpAHAAdABNAGEAaQBuAAAnUwBlAHMAcwBpAG8AbgAgAFQAbwBrAGUAbgAgADoA
IAB7ADAAfQAAAQBxUwBUAF8AMAA0ADAAYwA5ADgAYwA0AGEANQBhADAANAA3AGQANAA5ADUAZAAw
ADIAOABmAGYANgAyADYAOABlAGIAOQBhAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAAAAAtaxDG/0THSqdnpR2wQkM3AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFR
BAcCAggEIAASYQQgABJlBSABEmkcAyAAHAQAABFtBgADDg4cHAMgAAgDIAAOBCABARwEIAASeQUA
Ag4OHAogBgEIDg4OCBACBwABEn0RgIEFIAASgIUHIAIBDhKAhQi3elxWGTTgiQiJhF3NgIDMkQQA
AAAABAEAAAADBhJJAwYSTQMGEhACBggDBhEUBAAAEkkEAAASTQUAAQESTQQAABIQAwAAAQQIABJJ
BAgAEk0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU1RfMDQwYzk4YzRhNWEwNDdkNDk1ZDAyOGZmNjI2OGViOWEAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAxNwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAARC8AAAAAAAAA
AAAAXi8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAvAAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQBolY4ZAAABAGiVjhk/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADAANAAwAGMAOQA4AGMANABhADUAYQAwADQANwBkADQAOQA1AGQAMAAyADgAZgBm
ADYAMgA2ADgAZQBiADkAYQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA2ADUANAAyAC4AMwA4ADIANAA4AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfADAANAAwAGMAOQA4AGMANABhADUAYQAwADQANwBkADQAOQA1AGQAMAAyADgAZgBmADYA
MgA2ADgAZQBiADkAYQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AMAA0ADAAYwA5ADgAYwA0AGEANQBhADAANAA3AGQANAA5ADUAZAAwADIA
OABmAGYANgAyADYAOABlAGIAOQBhAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfADAANAAwAGMAOQA4AGMANABhADUAYQAwADQANwBkADQAOQA1AGQAMAAyADgA
ZgBmADYAMgA2ADgAZQBiADkAYQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgA1ADQAMgAuADMAOAAyADQAOAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA1ADQAMgAuADMAOAAyADQAOAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABwPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container - Perform ETL Work For Each ExportProfileID\Script Task - Perform ETL For Export ProfileID"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{45B44B37-F145-4360-AD1B-CF8ECDB3B931}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task - Perform ETL For Export ProfileID"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_0ed5691c198a494d85aeba1a079ba700"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::CurrentExportFormatCode,User::CurrentExportProfileID,User::CurrentExportTypeID,User::CurrentProfileName,User::CurrentSessionToken,User::ExportFileLocation,User::SourceSqlServer">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0ed5691c198a494d85aeba1a079ba700.Properties.Settings.get_Default():ST_0ed5691c198a494d85aeba1a079ba700.Properties.Sett" +
    "ings")]

namespace ST_0ed5691c198a494d85aeba1a079ba700.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ClientExtractETLWorker.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using System.Data.SqlClient;


namespace ST_0ed5691c198a494d85aeba1a079ba700
{
   public static class ClientExtractETLWorker
    {


        public static void ProcessExportProfile(dto[] proc_work, string source_connection_string, 
            int ExportProfileID, string ExtractRootDir, string FormatCode, string SessionToken, Action<string, string, bool> logger)
        {

            string Delim = (FormatCode == "TAB") ? "\t" : (FormatCode == "BCP") ? "|" : ",";

            try
            {
                using (SqlConnection connection = new SqlConnection(source_connection_string))
                {
                    connection.Open();
                    logger(nameof(ProcessExportProfile), $"Connection timeout:{connection.ConnectionTimeout}", false);
                    foreach (dto work in proc_work)
                    {
                        using (SqlCommand sqlCmd = connection.CreateCommand())
                        {
                            sqlCmd.CommandTimeout = 30 * 60; // 30 minutes
                            sqlCmd.CommandText = $"{work.procname}";
                            sqlCmd.CommandType = System.Data.CommandType.StoredProcedure;
                            sqlCmd.Parameters.Add(new SqlParameter("@p_export_profile_id", ExportProfileID));
                            sqlCmd.Parameters.Add(new SqlParameter("@p_mcv_clients_only", false));
                            sqlCmd.Parameters.Add(new SqlParameter("@p_etl_session_token", SessionToken));

                            logger(nameof(ProcessExportProfile), $"Executing:{work.procname}, {ExportProfileID}, {FormatCode}, {SessionToken}", false);
                            DateTime start = DateTime.Now;

                            using (SqlDataReader resultReader = sqlCmd.ExecuteReader())
                            {
                                if (!resultReader.HasRows)
                                {
                                    //System.IO.File.WriteAllText($"{ExtractRootDir}{work.filename}", "no results");
                                    //   continue;
                                }


                                using (MemoryStream mem = new MemoryStream())
                                {
                                    using (StreamWriter writer = new StreamWriter(mem))//) File.CreateText($"{ExtractRootDir}{work.filename}"))
                                    {
                                        int maxf = resultReader.FieldCount;
                                        int maxr = resultReader.RecordsAffected;
                                        int recswrote = 0;
                                        for (int i = 0; i < maxf; i++) // dump headers
                                        {
                                            if (i != maxf - 1)
                                                writer.WriteLine(resultReader.GetName(i) + Delim);
                                            else
                                                writer.WriteLine((resultReader.GetName(i)));// + "\n");
                                        }

                                        while (resultReader.Read()) // dump records
                                        {
                                            for (int i = 0; i < maxf; i++) // dump headers
                                            {
                                                string dirtyval = resultReader
                                                    .GetValue(i)
                                                    .ToString();
                                                string cleanval = dirtyval // clean up the contents to ensure correct file write
                                                    .Replace("\n", "")  // new line
                                                    .Replace("\r", "")  // cr
                                                    .Replace(",", "")   // ,
                                                    .Replace("!", "")   // !
                                                    .Replace("\t", "")  // tab
                                                    .Replace("\v", "")   // vert tab
                                                    .Replace("'", "");  // single tick

                                                if (i != maxf - 1)
                                                    writer.WriteLine(cleanval + Delim);
                                                else

                                                    writer.WriteLine((cleanval));// + "\n");

                                                recswrote++;
                                            }
                                        }
                                        logger(nameof(ClientExtractETLWorker), $"Procedure duration {(DateTime.Now - start).TotalSeconds } sec", false);
                                        logger(nameof(ClientExtractETLWorker), $"Wrote {recswrote} records X {maxf} columns to {FormatCode} memory {mem.Length / 1024} kb. {recswrote * maxf} datapoints written to mem.", false);
                                    }
                                }
                            }
                        }
                    }
                    connection.Close();
                }
            }
            catch (Exception ex)
            {
                logger(nameof(ClientExtractETLWorker),$"{ex.Message} , {ex.Data}", true);
                throw new Exception($"Exception occured {ex.Message} , {ex.Data}", ex);
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_0ed5691c198a494d85aeba1a079ba700
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            bool                                FireAgain       = true;
            Action<string, string, bool>        logger          = (sndr, m, ise) => {

                if (!ise)
                    Dts.Events.FireInformation(0, sndr, m, "", 0, ref FireAgain);
                else
                    Dts.Events.FireError(0, sndr, m, "", 0);

            };

            string  SessionToken                = (string)Dts.Variables["CurrentSessionToken"].Value;
            string  ExtractClientDirectory      = $"{Dts.Variables["ExportFileLocation"].Value}{Dts.Variables["CurrentProfileName"].Value}\\";
            int     CurrentExportProfileID      = (int)Dts.Variables["CurrentExportProfileID"].Value;
            string  CurrentFormatCode           = (string)Dts.Variables["CurrentExportFormatCode"].Value;
            string  SourceSqlServer             = (string)Dts.Variables["SourceSqlServer"].Value;

            logger(nameof(ScriptMain), $"Running ETL procedures for {Dts.Variables["CurrentExportProfileID"].Value} Target:{ExtractClientDirectory}, from {SourceSqlServer}", false);

            if (!System.IO.Directory.Exists(ExtractClientDirectory))
            {
                System.IO.Directory.CreateDirectory(ExtractClientDirectory);
                Dts.Events.FireInformation(0, nameof(ScriptMain), $"Created directory:{ExtractClientDirectory}", "", 0, ref FireAgain);
            }

            dto[] work = ClientExtractETLPackageDefinitions.GetCommonClientExtractProcedures();

            try
            {
                ClientExtractETLWorker.ProcessExportProfile(work, SourceSqlServer, CurrentExportProfileID, ExtractClientDirectory,
                    CurrentFormatCode, SessionToken, logger);

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                logger(nameof(ScriptMain), $"Exception thrown {ex.Message} dir:{ExtractClientDirectory}, session:{SessionToken}", true);
                Dts.TaskResult = (int)ScriptResults.Failure;
                throw ex;
            }
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="dto.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ST_0ed5691c198a494d85aeba1a079ba700
{
    public class dto
    {
        public string procname { get; set; }
        public string filename { get; set; }


        public dto() {
        }

    }

}]]></ProjectItem>
              <ProjectItem
                Name="ClientExtractETLPackageDefinitions.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ST_0ed5691c198a494d85aeba1a079ba700
{
    public static class ClientExtractETLPackageDefinitions
    {


        public static dto[] GetTexasSupplementalExtracts(int ExportProfileID) {

            return null;
        }

        public static dto[] GetMNSupplementalExtracts(int ExportProfileID) {

            return null;
        }
        public static dto[] GetWASupplementalExtracts(int ExportProfileID) {

            return null;
        }

        public static dto[] GetPRCSupplementalExtracts(int ExportProfileID)
        {

            return null;
        }

        public static dto[] GetCommonClientExtractProcedures() {

            List<dto> Package = new List<dto>();
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Agency_Profile", filename = "Agency_Profile.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Alternative_Encounter", filename = "Alternative_Encounter.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_ASQ3", filename = "ASQ3.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Client_Funding", filename = "Client_Funding.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Clinical_IPV", filename = "Clinical_IPV.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Course_Completion", filename = "Course_Completion.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Dance", filename = "Dance.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Demographics", filename = "Demographics.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Edinburgh", filename = "Edinburgh.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Education_Registration", filename = "Education_Registration.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Gad7", filename = "Gad7.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Govt_Comm_Srvcs", filename = "Govt_Comm_Srvcs.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Health_Habits", filename = "Health_Habits.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Home_Visit_Encounter", filename = "Home_Visit_Encounter.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Infant_Birth", filename = "Infant_Birth.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Infant_Health", filename = "Infant_Health.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Maternal_Health", filename = "Maternal_Health.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_PHQ9", filename = "PHQ-9.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_ProgramsAndSites", filename = "ProgramsAndSites.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Referrals_To_NFP", filename = "Referrals_To_NFP.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Referrals_To_Services", filename = "Referrals_To_Services.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Relationships", filename = "Relationships.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Staff_Update", filename = "Staff_Update.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Star", filename = "Star.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_SurveyIDs", filename = "SurveyIDs.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Telehealth", filename = "Telehealth.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_Tribal", filename = "Tribal.txt" });
            Package.Add(new dto() { procname = "survey_views.usp_etl_select_WeeklySupervision", filename = "WeeklySupervision.txt" });




            return Package.ToArray();
        }






    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_0ed5691c198a494d85aeba1a079ba700.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{989BE12F-A22B-4A21-8303-A051258FBC6C}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_0ed5691c198a494d85aeba1a079ba700</RootNamespace>
    <AssemblyName>ST_0ed5691c198a494d85aeba1a079ba700</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="ClientExtractETLPackageDefinitions.cs" />
    <Compile Include="ClientExtractETLWorker.cs" />
    <Compile Include="dto.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_0ed5691c198a494d85aeba1a079ba700</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_0ed5691c198a494d85aeba1a079ba700</msb:DisplayName>
		<msb:ProjectId>{79685AF8-AC93-48B2-B139-0F0D8C82C33C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_0ed5691c198a494d85aeba1a079ba700.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="ClientExtractETLPackageDefinitions.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="dto.cs"/>
		<msb:File Include="ClientExtractETLWorker.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_0ed5691c198a494d85aeba1a079ba700")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_0ed5691c198a494d85aeba1a079ba700")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0ed5691c198a494d85aeba1a079ba700.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0ed5691c198a494d85aeba1a079ba700.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0ed5691c198a494d85aeba1a079ba700.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_0ed5691c198a494d85aeba1a079ba700.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_0ed5691c198a494d85aeba1a079ba700.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_0ed5691c198a494d85aeba1a079ba700.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACl3KFoAAAAAAAAAAOAAIiALATAAADQAAAAIAAAAAAAAylIA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHhSAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA0DIAAAAgAAAANAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAA2AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAPAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACs
UgAAAAAAAEgAAAACAAUA7CoAANQmAAABAAAAAAAAAMBRAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoUKgATMAUApwMAAAAAAABzEAAACiVzCwAABiVyAQAAcG8I
AAAGJXJXAABwbwoAAAZvEQAACiVzCwAABiVyfQAAcG8IAAAGJXLhAABwbwoAAAZvEQAACiVzCwAA
BiVyFQEAcG8IAAAGJXJXAQBwbwoAAAZvEQAACiVzCwAABiVyaQEAcG8IAAAGJXK/AQBwbwoAAAZv
EQAACiVzCwAABiVy5QEAcG8IAAAGJXI3AgBwbwoAAAZvEQAACiVzCwAABiVyWQIAcG8IAAAGJXK1
AgBwbwoAAAZvEQAACiVzCwAABiVy4QIAcG8IAAAGJXIlAwBwbwoAAAZvEQAACiVzCwAABiVyOQMA
cG8IAAAGJXKLAwBwbwoAAAZvEQAACiVzCwAABiVyrQMAcG8IAAAGJXL5AwBwbwoAAAZvEQAACiVz
CwAABiVyFQQAcG8IAAAGJXJ7BABwbwoAAAZvEQAACiVzCwAABiVysQQAcG8IAAAGJXLzBABwbwoA
AAZvEQAACiVzCwAABiVyBQUAcG8IAAAGJXJdBQBwbwoAAAZvEQAACiVzCwAABiVyhQUAcG8IAAAG
JXLZBQBwbwoAAAZvEQAACiVzCwAABiVy/QUAcG8IAAAGJXJfBgBwbwoAAAZvEQAACiVzCwAABiVy
kQYAcG8IAAAGJXLjBgBwbwoAAAZvEQAACiVzCwAABiVyBQcAcG8IAAAGJXJZBwBwbwoAAAZvEQAA
CiVzCwAABiVyfQcAcG8IAAAGJXLVBwBwbwoAAAZvEQAACiVzCwAABiVy/QcAcG8IAAAGJXI/CABw
bwoAAAZvEQAACiVzCwAABiVyUwgAcG8IAAAGJXKtCABwbwoAAAZvEQAACiVzCwAABiVy1wgAcG8I
AAAGJXIxCQBwbwoAAAZvEQAACiVzCwAABiVyWwkAcG8IAAAGJXK/CQBwbwoAAAZvEQAACiVzCwAA
BiVy8wkAcG8IAAAGJXJHCgBwbwoAAAZvEQAACiVzCwAABiVyawoAcG8IAAAGJXK9CgBwbwoAAAZv
EQAACiVzCwAABiVy3woAcG8IAAAGJXIhCwBwbwoAAAZvEQAACiVzCwAABiVyMwsAcG8IAAAGJXJ/
CwBwbwoAAAZvEQAACiVzCwAABiVymwsAcG8IAAAGJXLpCwBwbwoAAAZvEQAACiVzCwAABiVyBwwA
cG8IAAAGJXJNDABwbwoAAAZvEQAACiVzCwAABiVyYwwAcG8IAAAGJXK/DABwbwoAAAZvEQAACm8S
AAAKKgAbMAgAnwMAAAEAABEOBHLrDABwKBMAAAotHA4EcvMMAHAoEwAACi0HcvsMAHArDHL/DABw
KwVyAw0AcAoDcxQAAAoLB28VAAAKDgZyBw0AcHIxDQBwB28WAAAKjCQAAAEoFwAAChZvGAAACgIM
Fg040gIAAAgJmhMEB28ZAAAKEwURBSAIBwAAbxoAAAoRBXJfDQBwEQRvBwAABigXAAAKbxsAAAoR
BRpvHAAAChEFbx0AAApyZw0AcASMJAAAAXMeAAAKbx8AAAomEQVvHQAACnKRDQBwFowpAAABcx4A
AApvHwAACiYRBW8dAAAKcrkNAHAOBXMeAAAKbx8AAAomDgZyBw0AcHLjDQBwGo0NAAABJRYRBG8H
AAAGoiUXBIwkAAABoiUYDgSiJRkOBaIoIAAAChZvGAAACighAAAKEwYRBW8iAAAKEwcRB28jAAAK
JnMkAAAKEwgRCHMlAAAKEwkRB28mAAAKEwoRB28nAAAKJhYTCxYTDCs2EQwRChdZLhgRCREHEQxv
KAAACgYoKQAACm8qAAAKKxARCREHEQxvKAAACm8qAAAKEQwXWBMMEQwRCjLEOLgAAAAWEw04pwAA
ABEHEQ1vKwAACm8sAAAKch0OAHByIQ4AcG8tAAAKciMOAHByIQ4AcG8tAAAKcvsMAHByIQ4AcG8t
AAAKcicOAHByIQ4AcG8tAAAKcgMNAHByIQ4AcG8tAAAKcisOAHByIQ4AcG8tAAAKci8OAHByIQ4A
cG8tAAAKEw4RDREKF1kuEREJEQ4GKCkAAApvKgAACisJEQkRDm8qAAAKEQsXWBMLEQ0XWBMNEQ0R
Cj9Q////EQdvLgAACjo8////DgZyMw4AcHJhDgBwKCEAAAoRBigvAAAKEw8SDygwAAAKjC0AAAEo
FwAAChZvGAAACg4GcjMOAHBylw4AcBuNDQAAASUWEQuMJAAAAaIlFxEKjCQAAAGiJRgOBKIlGREI
bzEAAAogAAQAAGpbjC4AAAGiJRoRCxEKWowkAAABoiggAAAKFm8YAAAK3gwRCSwHEQlvMgAACtze
DBEILAcRCG8yAAAK3N4MEQcsBxEHbzIAAArc3gwRBSwHEQVvMgAACtwJF1gNCQiOaT8l/f//B28z
AAAK3goHLAYHbzIAAArc3kcTEA4GcjMOAHByQg8AcBEQbzQAAAoREG81AAAKKDYAAAoXbxgAAApy
Vg8AcBEQbzQAAAoREG81AAAKKDYAAAoREHM3AAAKeioAQZQAAAIAAABWAQAAqgEAAAADAAAMAAAA
AAAAAAIAAABNAQAAwQEAAA4DAAAMAAAAAAAAAAIAAAA+AQAA3gEAABwDAAAMAAAAAAAAAAIAAAB1
AAAAtQIAACoDAAAMAAAAAAAAAAIAAAA3AAAAFAMAAEsDAAAKAAAAAAAAAAAAAAAwAAAAJwMAAFcD
AABHAAAAFgAAAR4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCoiAgN9AgAABCoeAig4AAAKKgAAGzAH
AKgBAAACAAARcxUAAAYKBgJ9CgAABAYXfQkAAAQG/gYWAAAGczkAAAoLAig6AAAKbzsAAApyjg8A
cG88AAAKbz0AAAp0IgAAAQxytg8AcAIoOgAACm87AAAKcsYPAHBvPAAACm89AAAKAig6AAAKbzsA
AApy7A8AcG88AAAKbz0AAAooNgAACg0CKDoAAApvOwAACnISEABwbzwAAApvPQAACqUkAAABEwQC
KDoAAApvOwAACnJAEABwbzwAAApvPQAACnQiAAABEwUCKDoAAApvOwAACnJwEABwbzwAAApvPQAA
CnQiAAABEwYHcpAQAHByphAAcAIoOgAACm87AAAKchIQAHBvPAAACm89AAAKCREGKD4AAAoWbxgA
AAoJKD8AAAotNAkoQAAACiYCKDoAAApvQQAAChZykBAAcHIOEQBwCSgXAAAKciEOAHAWBnwJAAAE
b0IAAAooBQAABhMHEQcRBhEECREFCAcoBgAABgIoOgAAChZvQwAACt4wEwgHcpAQAHByOhEAcBEI
bzQAAAoJCCg+AAAKF28YAAAKAig6AAAKF29DAAAKEQh6KgEQAAAAAFkBHncBMBYAAAEeAihEAAAK
Kq5+AwAABC0eco4RAHDQBgAAAihFAAAKb0YAAApzRwAACoADAAAEfgMAAAQqGn4EAAAEKh4CgAQA
AAQqGn4FAAAEKh4CKEgAAAoqLnMTAAAGgAUAAAQqAAATMAcASAAAAAAAAAAFLSUCewoAAAQoOgAA
Cm9BAAAKFgMEciEOAHAWAnwJAAAEb0IAAAoqAnsKAAAEKDoAAApvQQAAChYDBHIhDgBwFm9JAAAK
JipCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAABUBwAAI34AAMAHAABQCgAAI1N0
cmluZ3MAAAAAEBIAAAASAAAjVVMAECQAABAAAAAjR1VJRAAAACAkAAC0AgAAI0Jsb2IAAAAAAAAA
AgAAAVcdogkJAwAAAPoBMwAWAAABAAAAOQAAAAkAAAAKAAAAFgAAABEAAABJAAAAAgAAABcAAAAC
AAAAAwAAAAUAAAAIAAAAAgAAAAEAAAAFAAAAAQAAAAIAAAAAAGAFAQAAAAAABgDZA5kHBgBoBJkH
BgAlA3UHDwANCAAABgBSAzcGBgC8AzcGBgCdAzcGBgBPBDcGBgD5AzcGBgASBDcGBgBpAzcGBgCE
A58EBgCICZ4FBgBSAJ4FCgBtBqoJCgBNAaoJBgAfAp4FCgDIBqoJBgCIBXoABgA3B3oABgC+BZ4F
BgB7Bp4FBgDtApkHDgAtBA8FDgCSAg8FBgClBZ4FBgAIA3UHBgDoBrkHBgCYBhMGEgDYAkoFEgA5
A0oFEgCuAv4FBgBFAMkABgC7BJ4FCgBgBoUGBgBMAJ4FCgA1AYUGCgBWAqsACgBJBqoJCgAqB6oJ
BgC2BZ4FCgC7BoUGBgCOBXoABgBEB3oABgCjAZ4FBgBbAJ4FBgCXAZ4FBgAlCo0IDgA4BQ8FFgBP
CCgCFgCOASgCBgA3CnoABgCkBnoADgAWBw8FBgBdAp4FBgCqAZ4FBgAcCjcGAAAAAGEAAAAAAAEA
AQCBARAAoAgBADUAAQABAIEBEAD/BgEANQABAAYAAQAQALIGAQA1AAEABwABABAA2QUBAGUAAwAM
AAAAEADABxwINQADAA4AAAEQAHoIHAiBAAUAEgADAQAATgkAAGkABgAVAAMBEAAlAAAANQAJABUA
AQABAYABAQAbAYABEQCqBYMBEQCCAocBEQBgAYsBBgajAI8BVoDSCJIBVoBiApIBBgDkBZYBBgCD
CJkBUCAAAAAAlgAxCZ0BAQBQIAAAAACWABcJnQECAFAgAAAAAJYA4gidAQMAUCAAAAAAlgD8CJ0B
BABUIAAAAACWAFkIpAEFAAgkAAAAAJYAzgGqAQUASCgAAAAAhgjrAb0ADABQKAAAAACGCPgBEAAM
AFkoAAAAAIYIBQK9AA0AYSgAAAAAhggSAhAADQBqKAAAAACGGGgHBgAOAHQoAAAAAIYA3wUGAA4A
OCoAAAAAhhhoBwYADgBqKAAAAACDGGgHBgAOAEAqAAAAAJMI5Aa9AQ4AbCoAAAAAkwhqAsIBDgBz
KgAAAACTCHYCxwEOAHsqAAAAAJYIjwnNAQ8AgioAAAAAhhhoBwYADwCKKgAAAACRGG4H0gEPAGoo
AAAAAIYYaAcGAA8AmCoAAAAAgwA6ANYBDwAAAAEAagAAAAEAagAAAAEAagAAAAEAagAAAAEA5gQA
AAIAwgQAAAMAagAAAAQATwcAAAUAcAEAAAYAxwUAAAcA+AYAAAEAmQQAAAEAmQQAAAEAmQQAAAEA
tgYAAAIAqAUAAAMAxgIJAGgHAQARAGgHBgAZAGgHCgApAGgHEAAxAGgHEAA5AGgHEABBAGgHEABJ
AGgHEABRAGgHEABZAGgHEABhAGgHEAC5AGgHBgDBAGgHBgDZAGgHBgD5AGgHFQAMAGgHBgAMAOkA
IwAMABAKKQARAUEKTgB5AGgHEAAZAdQFBgAZAeIJVAARAYEJWAAUAIcBZgB5AD8BcAApAc8JAQAp
AfgJEAApAVICdQCBAMMIfABBAWgHggA5AekAiAARAYEJkQCJAAgKmACBANYGnQBRAW4JogCZAGgH
BgChAGgHpgBRAcAJVABRAe0AVABRAeMBrQARAXoJsgBhAUgCEABRAZAEuABpALkEvQARAVgBwQBR
AeQAogCJACgGxwCpAIgH0ABZAdsE1AB5AdACBgAZAcoCBgCxAHsBvQCxALcA2AARAYEJ3gCxAGgH
5QBpAGgHBgAUAGgHAgHJANoICAGJAUsIDgGRAZUFFAGZAYYEGwERAYEJHwGhAWcJJwGhATEKLAGJ
AVwJMwGxAe4FOQGJAZsJAQDJAGgHBgC5AbwBRAG5ARgKTQHhAGgHUwEBAWgHBgCxAV4HWwEIABwA
dgEIACAAewEhAGMAewEuAAsA8AEuABMA+QEuABsAGAIuACMAIQIuACsASgIuADMASgIuADsASgIu
AEMAIQIuAEsAUAIuAFMASgIuAFsAZwJBAGMAewFpAHsAGAKJAHsAGAKhAGMAewGjAGsAewHDAHMA
ewHgAGMAewEAAWMAewEgAWMAewEjAWMAewFAAWMAewEvAOwABAABAAYAAwAHAAUAAAD8Ad0BAAAW
At0BAADoBuEBAACKAuYBAACTCesBAgAHAAMAAQAIAAMAAgAJAAUAAQAKAAUAAgAPAAcAAgAQAAkA
AQARAAkAAgASAAsAGwBeAASAAAABAAAAlRnccAAAAAAAAAEAAAAEAAAAAAAAAAAAAABkAcAAAAAA
AAQAAAAAAAAAAAAAAGQBqwAAAAAADgAAAAAAAAAAAAAAbQHwBAAAAAAEAAAAAAAAAAAAAABkAZ4F
AAAAAA4AAAAAAAAAAAAAAG0BhAAAAAAAAAAAAAEAAADKBwAACAAFAAkABQAAAAAAAFNUXzBlZDU2
OTFjMTk4YTQ5NGQ4NWFlYmExYTA3OWJhNzAwADw+Y19fRGlzcGxheUNsYXNzMF8wADxNYWluPmJf
XzAATGlzdGAxAEludDMyAEFjdGlvbmAzAEludDY0ADxNb2R1bGU+AEV4cG9ydFByb2ZpbGVJRABT
eXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU3lzdGVtLkRh
dGEAZ2V0X0RhdGEAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAUmVhZABBZGQA
Z2V0X1JlY29yZHNBZmZlY3RlZAA8cHJvY25hbWU+a19fQmFja2luZ0ZpZWxkADxmaWxlbmFtZT5r
X19CYWNraW5nRmllbGQARGJDb21tYW5kAENyZWF0ZUNvbW1hbmQAU3FsQ29tbWFuZABSZXBsYWNl
AGRlZmF1bHRJbnN0YW5jZQBGb3JtYXRDb2RlAGdldF9NZXNzYWdlAEludm9rZQBWYXJpYWJsZQBJ
RGlzcG9zYWJsZQBEb3VibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAUHJv
Y2Vzc0V4cG9ydFByb2ZpbGUAR2V0TmFtZQBnZXRfcHJvY25hbWUAc2V0X3Byb2NuYW1lAGdldF9m
aWxlbmFtZQBzZXRfZmlsZW5hbWUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVu
dGltZQBXcml0ZUxpbmUAc2V0X0NvbW1hbmRUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBpc2UAQ2xvc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBD
b21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERl
YnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVB
dHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmli
dXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0
cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0
cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2lu
dEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlB
dHRyaWJ1dGUAZ2V0X1ZhbHVlAEdldFZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25p
bmcAVG9TdHJpbmcAc291cmNlX2Nvbm5lY3Rpb25fc3RyaW5nAGdldF9MZW5ndGgAcHJvY193b3Jr
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5U
YXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABT
VF8wZWQ1NjkxYzE5OGE0OTRkODVhZWJhMWEwNzliYTcwMC5kbGwATWVtb3J5U3RyZWFtAGdldF9J
dGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAEJvb2xlYW4AVGltZVNwYW4AU2Vzc2lvblRva2Vu
AE9wZW4AU2NyaXB0TWFpbgBGaXJlQWdhaW4ARmlyZUluZm9ybWF0aW9uAFN5c3RlbS5Db25maWd1
cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAG9wX1N1YnRyYWN0aW9uAFN5c3RlbS5SZWZsZWN0
aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ARXhj
ZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBEaXJlY3RvcnlJbmZvAGR0bwBz
bmRyAERiRGF0YVJlYWRlcgBTcWxEYXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIAZ2V0X1Jlc291cmNl
TWFuYWdlcgBsb2dnZXIAQ2xpZW50RXh0cmFjdEVUTFdvcmtlcgBFdmVudHNPYmplY3RXcmFwcGVy
AFNxbFBhcmFtZXRlcgBTdHJlYW1Xcml0ZXIAVGV4dFdyaXRlcgBFeHRyYWN0Um9vdERpcgBGaXJl
RXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBnZXRfVG90YWxTZWNvbmRzAFN5
c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF8wZWQ1Njkx
YzE5OGE0OTRkODVhZWJhMWEwNzliYTcwMC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMA
RGVidWdnaW5nTW9kZXMAU1RfMGVkNTY5MWMxOThhNDk0ZDg1YWViYTFhMDc5YmE3MDAuUHJvcGVy
dGllcwBnZXRfVmFyaWFibGVzAEdldENvbW1vbkNsaWVudEV4dHJhY3RQcm9jZWR1cmVzAFNldHRp
bmdzADw+NF9fdGhpcwBTeXN0ZW0uQ29sbGVjdGlvbnMAQ2xpZW50RXh0cmFjdEVUTFBhY2thZ2VE
ZWZpbml0aW9ucwBnZXRfUGFyYW1ldGVycwBTdWNjZXNzAGdldF9EdHMAR2V0V0FTdXBwbGVtZW50
YWxFeHRyYWN0cwBHZXRQUkNTdXBwbGVtZW50YWxFeHRyYWN0cwBHZXRNTlN1cHBsZW1lbnRhbEV4
dHJhY3RzAEdldFRleGFzU3VwcGxlbWVudGFsRXh0cmFjdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZl
bnRzAEV4aXN0cwBnZXRfSGFzUm93cwBDb25jYXQARm9ybWF0AE9iamVjdABnZXRfRGVmYXVsdABz
ZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAZ2V0X0ZpZWxkQ291bnQAc2V0X0Nv
bW1hbmRUaW1lb3V0AGdldF9Db25uZWN0aW9uVGltZW91dABzZXRfQ29tbWFuZFRleHQAZ2V0X05v
dwBUb0FycmF5AGdldF9Bc3NlbWJseQBJRGljdGlvbmFyeQBDcmVhdGVEaXJlY3RvcnkAb3BfRXF1
YWxpdHkAAAAAAFVzAHUAcgB2AGUAeQBfAHYAaQBlAHcAcwAuAHUAcwBwAF8AZQB0AGwAXwBzAGUA
bABlAGMAdABfAEEAZwBlAG4AYwB5AF8AUAByAG8AZgBpAGwAZQAAJUEAZwBlAG4AYwB5AF8AUABy
AG8AZgBpAGwAZQAuAHQAeAB0AABjcwB1AHIAdgBlAHkAXwB2AGkAZQB3AHMALgB1AHMAcABfAGUA
dABsAF8AcwBlAGwAZQBjAHQAXwBBAGwAdABlAHIAbgBhAHQAaQB2AGUAXwBFAG4AYwBvAHUAbgB0
AGUAcgAAM0EAbAB0AGUAcgBuAGEAdABpAHYAZQBfAEUAbgBjAG8AdQBuAHQAZQByAC4AdAB4AHQA
AEFzAHUAcgB2AGUAeQBfAHYAaQBlAHcAcwAuAHUAcwBwAF8AZQB0AGwAXwBzAGUAbABlAGMAdABf
AEEAUwBRADMAABFBAFMAUQAzAC4AdAB4AHQAAFVzAHUAcgB2AGUAeQBfAHYAaQBlAHcAcwAuAHUA
cwBwAF8AZQB0AGwAXwBzAGUAbABlAGMAdABfAEMAbABpAGUAbgB0AF8ARgB1AG4AZABpAG4AZwAA
JUMAbABpAGUAbgB0AF8ARgB1AG4AZABpAG4AZwAuAHQAeAB0AABRcwB1AHIAdgBlAHkAXwB2AGkA
ZQB3AHMALgB1AHMAcABfAGUAdABsAF8AcwBlAGwAZQBjAHQAXwBDAGwAaQBuAGkAYwBhAGwAXwBJ
AFAAVgAAIUMAbABpAG4AaQBjAGEAbABfAEkAUABWAC4AdAB4AHQAAFtzAHUAcgB2AGUAeQBfAHYA
aQBlAHcAcwAuAHUAcwBwAF8AZQB0AGwAXwBzAGUAbABlAGMAdABfAEMAbwB1AHIAcwBlAF8AQwBv
AG0AcABsAGUAdABpAG8AbgAAK0MAbwB1AHIAcwBlAF8AQwBvAG0AcABsAGUAdABpAG8AbgAuAHQA
eAB0AABDcwB1AHIAdgBlAHkAXwB2AGkAZQB3AHMALgB1AHMAcABfAGUAdABsAF8AcwBlAGwAZQBj
AHQAXwBEAGEAbgBjAGUAABNEAGEAbgBjAGUALgB0AHgAdAAAUXMAdQByAHYAZQB5AF8AdgBpAGUA
dwBzAC4AdQBzAHAAXwBlAHQAbABfAHMAZQBsAGUAYwB0AF8ARABlAG0AbwBnAHIAYQBwAGgAaQBj
AHMAACFEAGUAbQBvAGcAcgBhAHAAaABpAGMAcwAuAHQAeAB0AABLcwB1AHIAdgBlAHkAXwB2AGkA
ZQB3AHMALgB1AHMAcABfAGUAdABsAF8AcwBlAGwAZQBjAHQAXwBFAGQAaQBuAGIAdQByAGcAaAAA
G0UAZABpAG4AYgB1AHIAZwBoAC4AdAB4AHQAAGVzAHUAcgB2AGUAeQBfAHYAaQBlAHcAcwAuAHUA
cwBwAF8AZQB0AGwAXwBzAGUAbABlAGMAdABfAEUAZAB1AGMAYQB0AGkAbwBuAF8AUgBlAGcAaQBz
AHQAcgBhAHQAaQBvAG4AADVFAGQAdQBjAGEAdABpAG8AbgBfAFIAZQBnAGkAcwB0AHIAYQB0AGkA
bwBuAC4AdAB4AHQAAEFzAHUAcgB2AGUAeQBfAHYAaQBlAHcAcwAuAHUAcwBwAF8AZQB0AGwAXwBz
AGUAbABlAGMAdABfAEcAYQBkADcAABFHAGEAZAA3AC4AdAB4AHQAAFdzAHUAcgB2AGUAeQBfAHYA
aQBlAHcAcwAuAHUAcwBwAF8AZQB0AGwAXwBzAGUAbABlAGMAdABfAEcAbwB2AHQAXwBDAG8AbQBt
AF8AUwByAHYAYwBzAAAnRwBvAHYAdABfAEMAbwBtAG0AXwBTAHIAdgBjAHMALgB0AHgAdAAAU3MA
dQByAHYAZQB5AF8AdgBpAGUAdwBzAC4AdQBzAHAAXwBlAHQAbABfAHMAZQBsAGUAYwB0AF8ASABl
AGEAbAB0AGgAXwBIAGEAYgBpAHQAcwAAI0gAZQBhAGwAdABoAF8ASABhAGIAaQB0AHMALgB0AHgA
dAAAYXMAdQByAHYAZQB5AF8AdgBpAGUAdwBzAC4AdQBzAHAAXwBlAHQAbABfAHMAZQBsAGUAYwB0
AF8ASABvAG0AZQBfAFYAaQBzAGkAdABfAEUAbgBjAG8AdQBuAHQAZQByAAAxSABvAG0AZQBfAFYA
aQBzAGkAdABfAEUAbgBjAG8AdQBuAHQAZQByAC4AdAB4AHQAAFFzAHUAcgB2AGUAeQBfAHYAaQBl
AHcAcwAuAHUAcwBwAF8AZQB0AGwAXwBzAGUAbABlAGMAdABfAEkAbgBmAGEAbgB0AF8AQgBpAHIA
dABoAAAhSQBuAGYAYQBuAHQAXwBCAGkAcgB0AGgALgB0AHgAdAAAU3MAdQByAHYAZQB5AF8AdgBp
AGUAdwBzAC4AdQBzAHAAXwBlAHQAbABfAHMAZQBsAGUAYwB0AF8ASQBuAGYAYQBuAHQAXwBIAGUA
YQBsAHQAaAAAI0kAbgBmAGEAbgB0AF8ASABlAGEAbAB0AGgALgB0AHgAdAAAV3MAdQByAHYAZQB5
AF8AdgBpAGUAdwBzAC4AdQBzAHAAXwBlAHQAbABfAHMAZQBsAGUAYwB0AF8ATQBhAHQAZQByAG4A
YQBsAF8ASABlAGEAbAB0AGgAACdNAGEAdABlAHIAbgBhAGwAXwBIAGUAYQBsAHQAaAAuAHQAeAB0
AABBcwB1AHIAdgBlAHkAXwB2AGkAZQB3AHMALgB1AHMAcABfAGUAdABsAF8AcwBlAGwAZQBjAHQA
XwBQAEgAUQA5AAATUABIAFEALQA5AC4AdAB4AHQAAVlzAHUAcgB2AGUAeQBfAHYAaQBlAHcAcwAu
AHUAcwBwAF8AZQB0AGwAXwBzAGUAbABlAGMAdABfAFAAcgBvAGcAcgBhAG0AcwBBAG4AZABTAGkA
dABlAHMAAClQAHIAbwBnAHIAYQBtAHMAQQBuAGQAUwBpAHQAZQBzAC4AdAB4AHQAAFlzAHUAcgB2
AGUAeQBfAHYAaQBlAHcAcwAuAHUAcwBwAF8AZQB0AGwAXwBzAGUAbABlAGMAdABfAFIAZQBmAGUA
cgByAGEAbABzAF8AVABvAF8ATgBGAFAAAClSAGUAZgBlAHIAcgBhAGwAcwBfAFQAbwBfAE4ARgBQ
AC4AdAB4AHQAAGNzAHUAcgB2AGUAeQBfAHYAaQBlAHcAcwAuAHUAcwBwAF8AZQB0AGwAXwBzAGUA
bABlAGMAdABfAFIAZQBmAGUAcgByAGEAbABzAF8AVABvAF8AUwBlAHIAdgBpAGMAZQBzAAAzUgBl
AGYAZQByAHIAYQBsAHMAXwBUAG8AXwBTAGUAcgB2AGkAYwBlAHMALgB0AHgAdAAAU3MAdQByAHYA
ZQB5AF8AdgBpAGUAdwBzAC4AdQBzAHAAXwBlAHQAbABfAHMAZQBsAGUAYwB0AF8AUgBlAGwAYQB0
AGkAbwBuAHMAaABpAHAAcwAAI1IAZQBsAGEAdABpAG8AbgBzAGgAaQBwAHMALgB0AHgAdAAAUXMA
dQByAHYAZQB5AF8AdgBpAGUAdwBzAC4AdQBzAHAAXwBlAHQAbABfAHMAZQBsAGUAYwB0AF8AUwB0
AGEAZgBmAF8AVQBwAGQAYQB0AGUAACFTAHQAYQBmAGYAXwBVAHAAZABhAHQAZQAuAHQAeAB0AABB
cwB1AHIAdgBlAHkAXwB2AGkAZQB3AHMALgB1AHMAcABfAGUAdABsAF8AcwBlAGwAZQBjAHQAXwBT
AHQAYQByAAARUwB0AGEAcgAuAHQAeAB0AABLcwB1AHIAdgBlAHkAXwB2AGkAZQB3AHMALgB1AHMA
cABfAGUAdABsAF8AcwBlAGwAZQBjAHQAXwBTAHUAcgB2AGUAeQBJAEQAcwAAG1MAdQByAHYAZQB5
AEkARABzAC4AdAB4AHQAAE1zAHUAcgB2AGUAeQBfAHYAaQBlAHcAcwAuAHUAcwBwAF8AZQB0AGwA
XwBzAGUAbABlAGMAdABfAFQAZQBsAGUAaABlAGEAbAB0AGgAAB1UAGUAbABlAGgAZQBhAGwAdABo
AC4AdAB4AHQAAEVzAHUAcgB2AGUAeQBfAHYAaQBlAHcAcwAuAHUAcwBwAF8AZQB0AGwAXwBzAGUA
bABlAGMAdABfAFQAcgBpAGIAYQBsAAAVVAByAGkAYgBhAGwALgB0AHgAdAAAW3MAdQByAHYAZQB5
AF8AdgBpAGUAdwBzAC4AdQBzAHAAXwBlAHQAbABfAHMAZQBsAGUAYwB0AF8AVwBlAGUAawBsAHkA
UwB1AHAAZQByAHYAaQBzAGkAbwBuAAArVwBlAGUAawBsAHkAUwB1AHAAZQByAHYAaQBzAGkAbwBu
AC4AdAB4AHQAAAdUAEEAQgAAB0IAQwBQAAADLAAAA3wAAAMJAAApUAByAG8AYwBlAHMAcwBFAHgA
cABvAHIAdABQAHIAbwBmAGkAbABlAAAtQwBvAG4AbgBlAGMAdABpAG8AbgAgAHQAaQBtAGUAbwB1
AHQAOgB7ADAAfQAAB3sAMAB9AAApQABwAF8AZQB4AHAAbwByAHQAXwBwAHIAbwBmAGkAbABlAF8A
aQBkAAAnQABwAF8AbQBjAHYAXwBjAGwAaQBlAG4AdABzAF8AbwBuAGwAeQAAKUAAcABfAGUAdABs
AF8AcwBlAHMAcwBpAG8AbgBfAHQAbwBrAGUAbgAAOUUAeABlAGMAdQB0AGkAbgBnADoAewAwAH0A
LAAgAHsAMQB9ACwAIAB7ADIAfQAsACAAewAzAH0AAAMKAAABAAMNAAADIQAAAwsAAAMnAAEtQwBs
AGkAZQBuAHQARQB4AHQAcgBhAGMAdABFAFQATABXAG8AcgBrAGUAcgAANVAAcgBvAGMAZQBkAHUA
cgBlACAAZAB1AHIAYQB0AGkAbwBuACAAewAwAH0AIABzAGUAYwAAgKlXAHIAbwB0AGUAIAB7ADAA
fQAgAHIAZQBjAG8AcgBkAHMAIABYACAAewAxAH0AIABjAG8AbAB1AG0AbgBzACAAdABvACAAewAy
AH0AIABtAGUAbQBvAHIAeQAgAHsAMwB9ACAAawBiAC4AIAB7ADQAfQAgAGQAYQB0AGEAcABvAGkA
bgB0AHMAIAB3AHIAaQB0AHQAZQBuACAAdABvACAAbQBlAG0ALgAAE3sAMAB9ACAALAAgAHsAMQB9
AAA3RQB4AGMAZQBwAHQAaQBvAG4AIABvAGMAYwB1AHIAZQBkACAAewAwAH0AIAAsACAAewAxAH0A
ACdDAHUAcgByAGUAbgB0AFMAZQBzAHMAaQBvAG4AVABvAGsAZQBuAAAPewAwAH0AewAxAH0AXAAA
JUUAeABwAG8AcgB0AEYAaQBsAGUATABvAGMAYQB0AGkAbwBuAAAlQwB1AHIAcgBlAG4AdABQAHIA
bwBmAGkAbABlAE4AYQBtAGUAAC1DAHUAcgByAGUAbgB0AEUAeABwAG8AcgB0AFAAcgBvAGYAaQBs
AGUASQBEAAAvQwB1AHIAcgBlAG4AdABFAHgAcABvAHIAdABGAG8AcgBtAGEAdABDAG8AZABlAAAf
UwBvAHUAcgBjAGUAUwBxAGwAUwBlAHIAdgBlAHIAABVTAGMAcgBpAHAAdABNAGEAaQBuAABnUgB1
AG4AbgBpAG4AZwAgAEUAVABMACAAcAByAG8AYwBlAGQAdQByAGUAcwAgAGYAbwByACAAewAwAH0A
IABUAGEAcgBnAGUAdAA6AHsAMQB9ACwAIABmAHIAbwBtACAAewAyAH0AACtDAHIAZQBhAHQAZQBk
ACAAZABpAHIAZQBjAHQAbwByAHkAOgB7ADAAfQAAU0UAeABjAGUAcAB0AGkAbwBuACAAdABoAHIA
bwB3AG4AIAB7ADAAfQAgAGQAaQByADoAewAxAH0ALAAgAHMAZQBzAHMAaQBvAG4AOgB7ADIAfQAA
cVMAVABfADAAZQBkADUANgA5ADEAYwAxADkAOABhADQAOQA0AGQAOAA1AGEAZQBiAGEAMQBhADAA
NwA5AGIAYQA3ADAAMAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA
iVsSwVektESUBGuPhiePnwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQEReQcVEoCFARIQBSABARMA
BSAAHRMAHgcRDhI9HRIQCBIQEkERRRJJEk0SUQgICAgOEVUSWQUAAgIODgMgAAgFAAIODhwHFRI5
Aw4OAgkgAwETABMBEwIEIAASQQYgAQERgJkFIAASgJ0FIAIBDhwIIAESgKESgKEGAAIODh0cBAAA
EUUEIAASSQMgAAIGIAEBEoCtBCABDggFAAIODg4EIAEcCAMgAA4FIAIODg4IAAIRVRFFEUUDIAAN
AyAACgUgABKAwQYAAw4OHBwGIAIBDhJZFQcJEiQVEjkDDg4CDg4IDg4dEhASWQUgAgEcGAUgABKA
xQUgABKAyQYgARKAzRwDIAAcBwAEDg4cHBwEAAECDgYAARKA1Q4FIAASgNkKIAYBCA4ODggQAggA
ARKA3RGA4QUgABKA5QcgAgEOEoDlCCAFAggODg4ICLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAA
AAIGDgMGEnEDBhJ1AwYSHAIGCAMGESACBgIDBhIUBgABHRIQCAUAAB0SEBIABwEdEhAOCA4ODhUS
OQMODgIEAAAScQQAABJ1BQABARJ1BAAAEhwDAAABBiADAQ4OAgMoAA4ECAAScQQIABJ1BAgAEhwI
AQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzBl
ZDU2OTFjMTk4YTQ5NGQ4NWFlYmExYTA3OWJhNzAwAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIw
MTcAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5h
bWUSLk5FVCBGcmFtZXdvcmsgNC41AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2Vz
LlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRy
YWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50
aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAKBSAAAAAAAAAAAAALpSAAAAIAAA
AAAAAAAAAAAAAAAAAAAAAAAAAACsUgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxs
AAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAA
AAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAABoEAAAAAAAA
AAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQDc
cJUZAAABANxwlRk/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwA
ZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAR6AwAAAQBT
AHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEA
AQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAA
AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADAAZQBkADUA
NgA5ADEAYwAxADkAOABhADQAOQA0AGQAOAA1AGEAZQBiAGEAMQBhADAANwA5AGIAYQA3ADAAMAAA
AD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADUANAA5AC4AMgA4ADgA
OQAyAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADAAZQBkADUANgA5
ADEAYwAxADkAOABhADQAOQA0AGQAOAA1AGEAZQBiAGEAMQBhADAANwA5AGIAYQA3ADAAMAAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AMABl
AGQANQA2ADkAMQBjADEAOQA4AGEANAA5ADQAZAA4ADUAYQBlAGIAYQAxAGEAMAA3ADkAYgBhADcA
MAAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADAAZQBk
ADUANgA5ADEAYwAxADkAOABhADQAOQA0AGQAOAA1AGEAZQBiAGEAMQBhADAANwA5AGIAYQA3ADAA
MAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA1ADQAOQAu
ADIAOAA4ADkAMgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgA1ADQAOQAuADIAOAA4ADkAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAADMMgAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container - Perform ETL Work For Each ExportProfileID.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{FFBE49E4-C603-45CA-9819-A614B1E86D61}"
          DTS:From="Package\Foreach Loop Container - Perform ETL Work For Each ExportProfileID\Script Task - Create Session Token"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container - Perform ETL Work For Each ExportProfileID\Script Task - Perform ETL For Export ProfileID" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container - Perform ETL Work For Each ExportProfileID.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{96C62D7B-8209-43F7-A986-945244AD99D5}"
          DTS:From="Package\Foreach Loop Container - Perform ETL Work For Each ExportProfileID\Script Task - Perform ETL For Export ProfileID"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container - Perform ETL Work For Each ExportProfileID\Execute SQL Task - Update ExportProfileID Extract Status" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{A1768491-9A75-43F0-A606-D5F44C39CB75}"
          DTS:ObjectName="{A1768491-9A75-43F0-A606-D5F44C39CB75}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::CurrentProfileName" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{FD25DFAB-C5B2-421C-8F19-EC9177A88397}"
          DTS:ObjectName="{FD25DFAB-C5B2-421C-8F19-EC9177A88397}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::CurrentExportProfileID" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{C681949F-E992-428B-8A59-1695FC6128C5}"
          DTS:ObjectName="{C681949F-E992-428B-8A59-1695FC6128C5}"
          DTS:ValueIndex="2"
          DTS:VariableName="User::CurrentExportTypeID" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{FBFD4CC1-F49E-43DD-BD99-AF90A01C3671}"
          DTS:ObjectName="{FBFD4CC1-F49E-43DD-BD99-AF90A01C3671}"
          DTS:ValueIndex="4"
          DTS:VariableName="User::CurrentExportFormatCode" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task - Cleanup"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{A79372E4-6F52-45F3-897A-2BB0756E991B}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task - Cleanup"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_5001200bf2344ab68c8f151bd35424b7"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_5001200bf2344ab68c8f151bd35424b7
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_5001200bf2344ab68c8f151bd35424b7</msb:CodeName>
		<msb:DisplayName>ST_5001200bf2344ab68c8f151bd35424b7</msb:DisplayName>
		<msb:ProjectId>{9C672730-87BE-410E-92B6-DC4300652BCE}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_5001200bf2344ab68c8f151bd35424b7.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5001200bf2344ab68c8f151bd35424b7.Properties.Settings.get_Default():ST_5001200bf2344ab68c8f151bd35424b7.Properties.Sett" +
    "ings")]

namespace ST_5001200bf2344ab68c8f151bd35424b7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_5001200bf2344ab68c8f151bd35424b7.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8597f6a7-f1bd-4d8b-96f9-a58daa3ce2a4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_5001200bf2344ab68c8f151bd35424b7</RootNamespace>
    <AssemblyName>ST_5001200bf2344ab68c8f151bd35424b7</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_5001200bf2344ab68c8f151bd35424b7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_5001200bf2344ab68c8f151bd35424b7")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5001200bf2344ab68c8f151bd35424b7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5001200bf2344ab68c8f151bd35424b7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5001200bf2344ab68c8f151bd35424b7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_5001200bf2344ab68c8f151bd35424b7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_5001200bf2344ab68c8f151bd35424b7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_5001200bf2344ab68c8f151bd35424b7.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFFwH1oAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAAdiwA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACQsAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAfAwAAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABY
LAAAAAAAAEgAAAACAAUAxCAAAKgKAAABAAAAAAAAAGwrAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAADYCKBAAAAoWbxEAAAoqHgIoEgAACioeAigTAAAKKq5+AQAA
BC0ecgEAAHDQAwAAAigUAAAKbxUAAApzFgAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4D
AAAEKh4CKBcAAAoqLnMIAAAGgAMAAAQqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBs
AAAAgAMAACN+AADsAwAA7AQAACNTdHJpbmdzAAAAANgIAAB0AAAAI1VTAEwJAAAQAAAAI0dVSUQA
AABcCQAATAEAACNCbG9iAAAAAAAAAAIAAAFXHaABCQMAAAD6ATMAFgAAAQAAABsAAAAFAAAABgAA
AAkAAAABAAAAFwAAAAIAAAAQAAAAAgAAAAMAAAAEAAAAAQAAAAMAAAABAAAAAQAAAAAAGgMBAAAA
AAAGAN0B4QMGAGwC4QMGACkBzgMPAFUEAAAGAFYBjwMGAMABjwMGAKEBjwMGAFMCjwMGAP0BjwMG
ABYCjwMGAG0BjwMGAIgBkAIKADECyQIKAKgAyQIGAEkDQgMGAAwBzgMGALoEQgMGALEDAQQGAKED
egMOANwABAMOAD0BBAMOAMQAZQMGAPEA4QMKAPICyQIGAHMAQgMGAE8AQgMGAOAEjwMAAAAAJQAA
AAAAAQABAAEAEABaAwEAOQABAAEAAAAQAAgEZARFAAEAAwAAARAAkwRkBFkAAwAHAAMBAACsBAAA
PQAEAAoAEQBOA08AEQCYAFMAEQA/AFcABgYuAFsAVoCcBF4AVoB4AF4AUCAAAAAAhgBgAwYAAQBe
IAAAAACGGMEDBgABAGYgAAAAAIMYwQMGAAEAbiAAAAAAkwitA2IAAQCaIAAAAACTCIAAZwABAKEg
AAAAAJMIjABsAAEAqSAAAAAAlgjBBHIAAgCwIAAAAACGGMEDBgACALggAAAAAJEYxwN3AAIAAAAB
AIoCCQDBAwEAEQDBAwYAGQDBAwoAKQDBAxAAMQDBAxAAOQDBAxAAQQDBAxAASQDBAxAAUQDBAxAA
WQDBAxAAYQDBAxAAaQDBAwYAgQDBAwYAqQDBAxUAuQDBAwYAcQCkBBsAwQDNBAEAcQDBAwYAiQDB
AwYAyQBhACAAyQDcBCcAkQDBAywAsQDBAwYACAAUAEUACAAYAEoAKQBzALIALgALAIoALgATAJMA
LgAbALIALgAjALsALgArAOQALgAzAOQALgA7AOQALgBDALsALgBLAOoALgBTAOQALgBbAAEBQwBj
AEoASQBzALIAYQB7AEoAYwBrAEoAAwABAAQAAwAAALEDewAAAKAAgAAAAMUEhQACAAQAAwACAAUA
BQABAAYABQACAAcABwAEgAAAAQAAAI4ZsIoAAAAAAAABAAAABAAAAAAAAAAAAAAAMwA2AAAAAAAO
AAAAAAAAAAAAAAA8AKoCAAAAAAQAAAAAAAAAAAAAADMAQgMAAAAAAAAAAAEAAAASBAAABQACAAAA
AAAAU1RfNTAwMTIwMGJmMjM0NGFiNjhjOGYxNTFiZDM1NDI0YjcAPE1vZHVsZT4AdmFsdWVfXwBt
c2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBW
U1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9y
QnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0
ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFz
c2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2Ny
aXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
TWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRh
c2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNU
XzUwMDEyMDBiZjIzNDRhYjY4YzhmMTUxYmQzNTQyNGI3LmRsbABTeXN0ZW0ARW51bQByZXNvdXJj
ZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9u
AFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IA
LmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2Vz
AFN5c3RlbS5SZXNvdXJjZXMAU1RfNTAwMTIwMGJmMjM0NGFiNjhjOGYxNTFiZDM1NDI0YjcuUHJv
cGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzUwMDEyMDBiZjIz
NDRhYjY4YzhmMTUxYmQzNTQyNGI3LlByb3BlcnRpZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRz
AFNjcmlwdFJlc3VsdHMAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AGdldF9Bc3Nl
bWJseQAAAAAAcVMAVABfADUAMAAwADEAMgAwADAAYgBmADIAMwA0ADQAYQBiADYAOABjADgAZgAx
ADUAMQBiAGQAMwA1ADQAMgA0AGIANwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAAALgNtGwGBmRIvYbpKagAfeQABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEEIAAS
YQYAARJlEWkEIAASbQYgAgEOEm0It3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0D
BhIQAgYIAwYRFAQAABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAA
AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzUwMDEyMDBi
ZjIzNDRhYjY4YzhmMTUxYmQzNTQyNGI3AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAEkB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5F
VCBGcmFtZXdvcmsgNC41ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABMLAAAAAAAAAAAAABmLAAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAWCwAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAsIqOGQAAAQCwio4ZPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwA1ADAAMAAxADIAMAAwAGIAZgAyADMANAA0AGEAYgA2ADgAYwA4AGYAMQA1ADEA
YgBkADMANQA0ADIANABiADcAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4ANgA1ADQAMgAuADMANQA1ADAANAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwA1ADAAMAAxADIAMAAwAGIAZgAyADMANAA0AGEAYgA2ADgAYwA4AGYAMQA1ADEAYgBk
ADMANQA0ADIANABiADcALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANwAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADUAMAAwADEAMgAwADAAYgBmADIAMwA0ADQAYQBiADYAOABjADgAZgAx
ADUAMQBiAGQAMwA1ADQAMgA0AGIANwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwA1ADAAMAAxADIAMAAwAGIAZgAyADMANAA0AGEAYgA2ADgAYwA4AGYAMQA1
ADEAYgBkADMANQA0ADIANABiADcAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADYANQA0ADIALgAzADUANQAwADQAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANQA0ADIALgAzADUANQAwADQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAeDwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{8F7F0799-6813-4EEB-89B0-5912B427F0CF}"
      DTS:From="Package\Execute SQL Task - Get Work"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop Container - Perform ETL Work For Each ExportProfileID" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{1315D7DD-832A-4C00-AF69-D6A48621DC14}"
      DTS:From="Package\Foreach Loop Container - Perform ETL Work For Each ExportProfileID"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Script Task - Cleanup"
      DTS:Value="2" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="217.6,41.6"
          Id="Package\Execute SQL Task - Get Work"
          TopLeft="194,72" />
        <NodeLayout
          Size="349.6,41.6"
          Id="Package\Foreach Loop Container - Perform ETL Work For Each ExportProfileID\Execute SQL Task - Update ExportProfileID Extract Status"
          TopLeft="94.0571473335734,214.24706567662" />
        <NodeLayout
          Size="243.2,41.6"
          Id="Package\Foreach Loop Container - Perform ETL Work For Each ExportProfileID\Script Task - Create Session Token"
          TopLeft="37,18" />
        <NodeLayout
          Size="295.2,41.6"
          Id="Package\Foreach Loop Container - Perform ETL Work For Each ExportProfileID\Script Task - Perform ETL For Export ProfileID"
          TopLeft="23.2738108222126,106.808823083465" />
        <EdgeLayout
          Id="Package\Foreach Loop Container - Perform ETL Work For Each ExportProfileID.PrecedenceConstraints[Constraint]"
          TopLeft="158.6,59.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="12.2738108222126,47.2088230834654"
              Start="0,0"
              End="12.2738108222126,39.7088230834654">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.6044115417327" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.6044115417327"
                    Point2="0,23.6044115417327"
                    Point3="4,23.6044115417327" />
                  <mssgle:LineSegment
                    End="8.2738108222126,23.6044115417327" />
                  <mssgle:CubicBezierSegment
                    Point1="8.2738108222126,23.6044115417327"
                    Point2="12.2738108222126,23.6044115417327"
                    Point3="12.2738108222126,27.6044115417327" />
                  <mssgle:LineSegment
                    End="12.2738108222126,39.7088230834654" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container - Perform ETL Work For Each ExportProfileID.PrecedenceConstraints[Constraint 1]"
          TopLeft="170.873810822213,148.408823083465">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="97.9833365113608,65.8382425931545"
              Start="0,0"
              End="97.9833365113608,58.3382425931545">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.9191212965773" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.9191212965773"
                    Point2="0,32.9191212965773"
                    Point3="4,32.9191212965773" />
                  <mssgle:LineSegment
                    End="93.9833365113608,32.9191212965773" />
                  <mssgle:CubicBezierSegment
                    Point1="93.9833365113608,32.9191212965773"
                    Point2="97.9833365113608,32.9191212965773"
                    Point3="97.9833365113608,36.9191212965773" />
                  <mssgle:LineSegment
                    End="97.9833365113608,58.3382425931545" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="808,349.6"
          Size="808,392.8"
          Id="Package\Foreach Loop Container - Perform ETL Work For Each ExportProfileID"
          TopLeft="169,231" />
        <NodeLayout
          Size="179.2,41.6"
          Id="Package\Script Task - Cleanup"
          TopLeft="504,661" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="302.8,113.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="270.2,117.4"
              Start="0,0"
              End="270.2,109.9">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.7" />
                  <mssgle:CubicBezierSegment
                    Point1="0,54.7"
                    Point2="0,58.7"
                    Point3="4,58.7" />
                  <mssgle:LineSegment
                    End="266.2,58.7" />
                  <mssgle:CubicBezierSegment
                    Point1="266.2,58.7"
                    Point2="270.2,58.7"
                    Point3="270.2,62.7" />
                  <mssgle:LineSegment
                    End="270.2,109.9" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="573,623.8">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="20.6,37.1999999999999"
              Start="0,0"
              End="20.6,29.6999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.6" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.6"
                    Point2="0,18.6"
                    Point3="4,18.6" />
                  <mssgle:LineSegment
                    End="16.6,18.6" />
                  <mssgle:CubicBezierSegment
                    Point1="16.6,18.6"
                    Point2="20.6,18.6"
                    Point3="20.6,22.6" />
                  <mssgle:LineSegment
                    End="20.6,29.6999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.004453125,23.6,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>